{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "ShiprocketAPI",
    "description": "A common dashboard to manage your entire business on various Marketplaces.",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "krmct001.kartrocket.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "The api token provided by login api"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "The token is the key that you need to pass before accessing any section in the ShipRocket API (Except the “get countries” and “get codes”). Generating the token is an extremely simple process. Simply type in your email id (alternate id for the ShipRocket API) and all your detais will be generated.",
        "summary": "Access Token",
        "operationId": "Get token",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully token fetched",
            "schema": {
              "$ref": "#/definitions/GetTokenResponse"
            }
          },
          "400": {
            "description": "{\"message\": \"These credentials do not match our records.\",\n  \"status_code\": 400 }",
            "schema": {}
          },
          "422": {
            "description": "{\"message\": \"Error in input\",\n \"errors\": {  \"email\": [  \"The email field is required.\"  ], \"password\": [ \"The password field is required.\" ] }, \"status_code\": 400 }",
            "schema": {
              "$ref": "#/definitions/login422Error"
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Shows all the details of all the products that a ShipRocket user has. This can be filtered according to details like number of products per page, ascending or descending order sorting order. \n|Response Code",
        "summary": "Get Products",
        "operationId": "Get products",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The page number which is to be displayed"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The total number of products in each page"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Whether to arrange the items in ascending or descending order(DESC, ASC)"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Value by which the results will be filtered"
          },
          {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Validation of filtered value (data to be matched)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          },
          "401": {
            "description": "{\n  \"message\": \"Token Signature could not be verified.\",\n  \"status_code\": 401\n}",
            "schema": {
              "$ref": "#/definitions/401Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Add new product",
        "summary": "Add new Products",
        "operationId": "Add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          },
          "422": {
            "description": "{\n  \"message\": \"There were errors in adding new product!\",\n  \"errors\": {\n    \"name\": \"The name field is required.\",\n    \"type\": \"The type field is required.\",\n    \"sku\": \"The sku field is required.\"\n  },\n  \"status_code\": 422\n}",
            "schema": {
              "$ref": "#/definitions/addProduct422"
            }
          }
        }
      }
    },
    "/v1/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Shows all the countries which are present in the ShipRocket database. ShipRocket API provides ISO Code 2 and ISO Code 3 country options and has a total of 44 countries in its database. This allows you to use these countries in your own dropdown menu.",
        "summary": "Countries",
        "operationId": "Get countries",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCountriesResponse"
            }
          },
          "405": {
            "description": "{\n  \"message\": \"method not allowed\",\n  \"status_code\": 405\n}",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetTokenRequest": {
      "title": "Get token request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Prompts the user to type their email id",
          "example": "abcd@xyz.com"
        },
        "password": {
          "type": "string",
          "description": "Prompts the user to type their selected password",
          "example": "abcd1234"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "login422Error": {
      "title": "422 error unprocessable input",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Error in input"
        },
        "errors": {
          "type": "object",
          "properties": {
            "email": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "The email field is required."
              }
            },
            "password": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "The password field is required."
              }
            }
          }
        },
        "status_code": {
          "type": "integer",
          "example": 422
        }
      }
    },
    "GetTokenResponse": {
      "title": "Get token response",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "user’s unique user id",
          "example": 1
        },
        "first_name": {
          "type": "string",
          "description": "first name of the user",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "description": "last name of the user",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "description": "email of the user",
          "example": "abcd@xyz.com"
        },
        "company_id": {
          "type": "integer",
          "description": "company id of the user",
          "format": "int32",
          "example": 12
        },
        "created_at": {
          "type": "string",
          "description": "date of creation",
          "format": "dateTime"
        },
        "token": {
          "type": "string",
          "description": "necessary token number",
          "example": "huiyd878y823hh2hdu232h"
        }
      },
      "required": [
        "id",
        "first_name",
        "last_name",
        "email",
        "company_id",
        "created_at",
        "token"
      ]
    },
    "AddRequest": {
      "title": "Add request",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)",
          "example": "Toys"
        },
        "HSN": {
          "type": "string",
          "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under",
          "example": "1234cdhc"
        },
        "name": {
          "type": "string",
          "description": "Name of the product",
          "example": "SuperMan"
        },
        "tax_code": {
          "type": "string",
          "description": "The percentage of tax which is to be imposed",
          "example": "default"
        },
        "type": {
          "type": "string",
          "description": "If there is only one product or multiple types of products",
          "example": "Single"
        },
        "qty": {
          "type": "integer",
          "description": "Total Quantity of the products to be shipped",
          "example": 10
        },
        "low_stock": {
          "type": "string",
          "description": "Specifies when the low stock notification should come on",
          "example": ""
        },
        "category_code": {
          "type": "string",
          "description": "You can add a category code to your ShipRocket account from “add category”",
          "example": "default"
        },
        "description": {
          "type": "string",
          "description": "Gives a description of the product",
          "example": ""
        },
        "brand": {
          "type": "string",
          "description": "The product brand name",
          "example": ""
        },
        "size": {
          "type": "integer",
          "description": "",
          "example": ""
        },
        "weight": {
          "type": "integer",
          "description": "Total weight of the products",
          "example": ""
        },
        "length": {
          "type": "integer",
          "description": "Product Dimensions",
          "example": ""
        },
        "width": {
          "type": "integer",
          "description": "Product Dimensions",
          "example": ""
        },
        "height": {
          "type": "integer",
          "description": "Product Dimensions",
          "example": ""
        },
        "ean": {
          "type": "string",
          "description": "European Article Number - A barcode for product identification (which helps manufacturers identify how many products have been sold once a sale is made) It is 13 digits long and required for international selling",
          "example": ""
        },
        "upc": {
          "type": "string",
          "description": "Universal Product Code – Barcode for product identification which is used across the world. It is 12 digits long ",
          "example": ""
        },
        "isbn": {
          "type": "string",
          "description": "International Standard Book Number – Identification barcode for books, magazines, e-books and other published media. It is 10 digits long",
          "example": ""
        },
        "color": {
          "type": "string",
          "description": "The colour of the product",
          "example": ""
        },
        "imei_serialnumber": {
          "type": "string",
          "description": "The International Mobile Equipment Identity Number, which is used by  a network to identify valid devices. Eg if two iphones have to be shipped they will have 2 Imei’s",
          "example": ""
        },
        "cost_price": {
          "type": "integer",
          "description": "How much it cost to make the product",
          "example": ""
        },
        "mrp": {
          "type": "string",
          "description": "Maximum Retail Price. How much is the maximum price which the product can be sold at",
          "example": ""
        },
        "status": {
          "type": "integer",
          "description": "In Boolean, if the product details have been successfully or unsuccessfully added",
          "format": "int32",
          "example": 1
        },
        "image_url": {
          "type": "string",
          "description": "Shows the url of the product images which have been uploaded",
          "example": ""
        },
        "components": {
          "type": "array",
          "description": "An arrayed display of all the components",
          "items": {
            "type": "string",
            "example": []
          }
        }
      },
      "required": [
        "sku",
        "name",
        "tax_code",
        "type",
        "qty",
        "low_stock",
        "category_code",
        "description",
        "brand",
        "size",
        "weight",
        "length",
        "width",
        "height",
        "ean",
        "upc",
        "isbn",
        "color",
        "imei_serialnumber",
        "cost_price",
        "mrp",
        "status",
        "image_url",
        "components"
      ]
    },
    "addProduct422": {
      "title": "unprocessable data",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "There were errors in adding new product!"
        },
        "errors": {
          "type": "object",
          "properties": {
            "name": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "The name field is required."
            },
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "The type field is required."
            },
            "sku": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "The sku field is required."
            }
          }
        },
        "status_code": {
          "type": "integer",
          "example": 422
        }
      }
    },
    "GetProductsResponse": {
      "title": "Get products response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "sku": {
                "type": "string"
              },
              "hsn": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "category_code": {
                "type": "string"
              },
              "category_name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "cost_price": {
                "type": "string"
              },
              "mrp": {
                "type": "string"
              },
              "tax_code": {
                "type": "string"
              },
              "low_stock": {
                "type": "integer"
              },
              "ean": {
                "type": "string"
              },
              "upc": {
                "type": "string"
              },
              "isbn": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "color": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "dimensions": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "example": [
            {
              "id": 319134,
              "sku": "inactive",
              "hsn": "",
              "name": "inactive",
              "description": "",
              "category_code": "default",
              "category_name": "Default Category",
              "category_tax_code": "default",
              "image": "",
              "weight": "0.5 kg",
              "size": "",
              "cost_price": "0.00",
              "mrp": "0.00",
              "tax_code": "default",
              "low_stock": 0,
              "ean": "",
              "upc": "",
              "isbn": "",
              "created_at": "23 Jun 2017 02:17 PM",
              "updated_at": "23 Jun 2017 02:17 PM",
              "quantity": 11,
              "color": "",
              "brand": "",
              "dimensions": "10 x 10 x 10 cm",
              "status": "INACTIVE",
              "type": "Single"
            },
            {
              "id": 318862,
              "sku": "sanity",
              "hsn": "",
              "name": "sanity",
              "description": "",
              "category_code": "new",
              "category_name": "new",
              "category_tax_code": "5",
              "image": "",
              "weight": "0.5 kg",
              "size": "",
              "cost_price": "0.00",
              "mrp": "0.00",
              "tax_code": "5",
              "low_stock": 0,
              "ean": "",
              "upc": "",
              "isbn": "",
              "created_at": "23 Jun 2017 01:13 PM",
              "updated_at": "23 Jun 2017 01:13 PM",
              "quantity": 8,
              "color": "",
              "brand": "",
              "dimensions": "10 x 10 x 10 cm",
              "status": "ACTIVE",
              "type": "Single"
            }
          ]
        },
        "meta": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                },
                "per_page": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "total": 7,
                "count": 7,
                "per_page": 15,
                "current_page": 1,
                "total_pages": 1,
                "links": []
              }
            }
          }
        }
      }
    },
    "401Error": {
      "title": "Invalid token",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Token Signature could not be verified."
        },
        "status_code": {
          "type": "integer",
          "example": 401
        }
      }
    },
    "GetCountriesResponse": {
      "title": "Get countries response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status of response from server",
          "format": "int32",
          "example": "200"
        },
        "data": {
          "type": "object",
          "description": "Arrayed data",
          "example": [{
              "id": 1,
              "name": "Afghanistan",
              "iso_code_2": "AF",
              "iso_code_3": "AFG",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 2,
              "name": "Albania",
              "iso_code_2": "AL",
              "iso_code_3": "ALB",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 3,
              "name": "Algeria",
              "iso_code_2": "DZ",
              "iso_code_3": "DZA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 4,
              "name": "American Samoa",
              "iso_code_2": "AS",
              "iso_code_3": "ASM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 5,
              "name": "Andorra",
              "iso_code_2": "AD",
              "iso_code_3": "AND",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 6,
              "name": "Angola",
              "iso_code_2": "AO",
              "iso_code_3": "AGO",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 7,
              "name": "Anguilla",
              "iso_code_2": "AI",
              "iso_code_3": "AIA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 8,
              "name": "Antarctica",
              "iso_code_2": "AQ",
              "iso_code_3": "ATA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 9,
              "name": "Antigua and Barbuda",
              "iso_code_2": "AG",
              "iso_code_3": "ATG",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 10,
              "name": "Argentina",
              "iso_code_2": "AR",
              "iso_code_3": "ARG",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 11,
              "name": "Armenia",
              "iso_code_2": "AM",
              "iso_code_3": "ARM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 12,
              "name": "Aruba",
              "iso_code_2": "AW",
              "iso_code_3": "ABW",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 13,
              "name": "Australia",
              "iso_code_2": "AU",
              "iso_code_3": "AUS",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 14,
              "name": "Austria",
              "iso_code_2": "AT",
              "iso_code_3": "AUT",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 15,
              "name": "Azerbaijan",
              "iso_code_2": "AZ",
              "iso_code_3": "AZE",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 16,
              "name": "Bahamas",
              "iso_code_2": "BS",
              "iso_code_3": "BHS",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 17,
              "name": "Bahrain",
              "iso_code_2": "BH",
              "iso_code_3": "BHR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 18,
              "name": "Bangladesh",
              "iso_code_2": "BD",
              "iso_code_3": "BGD",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 19,
              "name": "Barbados",
              "iso_code_2": "BB",
              "iso_code_3": "BRB",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 20,
              "name": "Belarus",
              "iso_code_2": "BY",
              "iso_code_3": "BLR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 21,
              "name": "Belgium",
              "iso_code_2": "BE",
              "iso_code_3": "BEL",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 22,
              "name": "Belize",
              "iso_code_2": "BZ",
              "iso_code_3": "BLZ",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 23,
              "name": "Benin",
              "iso_code_2": "BJ",
              "iso_code_3": "BEN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 24,
              "name": "Bermuda",
              "iso_code_2": "BM",
              "iso_code_3": "BMU",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 25,
              "name": "Bhutan",
              "iso_code_2": "BT",
              "iso_code_3": "BTN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 26,
              "name": "Bolivia",
              "iso_code_2": "BO",
              "iso_code_3": "BOL",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 27,
              "name": "Bosnia and Herzegowina",
              "iso_code_2": "BA",
              "iso_code_3": "BIH",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 28,
              "name": "Botswana",
              "iso_code_2": "BW",
              "iso_code_3": "BWA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 29,
              "name": "Bouvet Island",
              "iso_code_2": "BV",
              "iso_code_3": "BVT",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 30,
              "name": "Brazil",
              "iso_code_2": "BR",
              "iso_code_3": "BRA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 31,
              "name": "British Indian Ocean Territory",
              "iso_code_2": "IO",
              "iso_code_3": "IOT",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 32,
              "name": "Brunei Darussalam",
              "iso_code_2": "BN",
              "iso_code_3": "BRN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 33,
              "name": "Bulgaria",
              "iso_code_2": "BG",
              "iso_code_3": "BGR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 34,
              "name": "Burkina Faso",
              "iso_code_2": "BF",
              "iso_code_3": "BFA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 35,
              "name": "Burundi",
              "iso_code_2": "BI",
              "iso_code_3": "BDI",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 36,
              "name": "Cambodia",
              "iso_code_2": "KH",
              "iso_code_3": "KHM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 37,
              "name": "Cameroon",
              "iso_code_2": "CM",
              "iso_code_3": "CMR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 38,
              "name": "Canada",
              "iso_code_2": "CA",
              "iso_code_3": "CAN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 39,
              "name": "Cape Verde",
              "iso_code_2": "CV",
              "iso_code_3": "CPV",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 40,
              "name": "Cayman Islands",
              "iso_code_2": "KY",
              "iso_code_3": "CYM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            }
          ]
        }
      },
      "required": ["status", "data"]
    },
    "405Error": {
      "title": "Post method instead of Get or vice versa",
      "type": "object",
      "properties": {
        "message": {"type": "string", "example": "method not allowed"},
        "status_code": {"type": "integer", "example": 405}
      }
    }
  }
}