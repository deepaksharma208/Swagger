{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "ShiprocketAPI",
    "description": "A common dashboard to manage your entire business on various Marketplaces.",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "krmct001.kartrocket.com",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/v1/external/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Get user and token from credentials",
        "summary": "Generate access token",
        "operationId": "Get token",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTokenResponse"
            }
          }
        }
      }
    },
    "/v1/external/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Get a JSON representation of all countries",
        "summary": "Get all countries",
        "operationId": "Get countries",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCountriesResponse"
            }
          }
        }
      }
    },
    "/v1/external/countries/show/{id}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Get all zones",
        "summary": "Get all zones of a country",
        "operationId": "Get zones",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Country id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetZonesResponse"
            }
          }
        }
      }
    },
    "/v1/external/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get a JSON representation of all products",
        "summary": "Get all Products",
        "operationId": "Get products",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of products to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Add new product",
        "summary": "Add new Products",
        "operationId": "Add",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/products/show/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Display single product details",
        "summary": "Get details of a single Product",
        "operationId": "Show",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShowResponse"
            }
          }
        }
      }
    },
    "/v1/external/products/import": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Import CSV containing products data",
        "summary": "Import Products in bulk",
        "operationId": "Bulk import",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/products/export": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Export CSV file containing company's products data",
        "summary": "Export Products in bulk",
        "operationId": "Bulk export",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/products/sample": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Export a sample CSV file for importing",
        "summary": "Get a sample format to Import Products",
        "operationId": "Bulk sample",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/products/update/imei": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Update product IMEI",
        "summary": "Update IMEI of a Product",
        "operationId": "Update IMEI",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateImeiRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/external/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Get a JSON representation of all listings",
        "summary": "Get all Listings",
        "operationId": "Get all",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of listings to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllResponse"
            }
          }
        }
      }
    },
    "/v1/external/listings/import": {
      "post": {
        "tags": [
          "Listings"
        ],
        "description": "Import CSV containing channel catalog to master catalog mappings",
        "summary": "Import Catalog mappings",
        "operationId": "Bulk import1",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/listings/export/mapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export CSV file containing mapped channel catalog data",
        "summary": "Export mapped Catalog details",
        "operationId": "Export mapped",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/listings/export/unmapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export CSV file containing un-mapped channel catalog data",
        "summary": "Export unmapped Catalog details",
        "operationId": "Export un-mapped",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/listings/export/sample": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export sample CSV file for import listings",
        "summary": "Export sample format to import listings",
        "operationId": "Export sample",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/listings/link": {
      "post": {
        "tags": [
          "Listings"
        ],
        "description": "Map channel catalog to master catalog",
        "summary": "Map channel Catalog to master Catalog",
        "operationId": "Map",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/external/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of all orders",
        "summary": "Get all orders",
        "operationId": "Get all orders",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          }, {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }, {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllOrdersResponse"
            }
          }
        }
      }
    },
    "/v1/external/orders/unprocessable": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of all unprocessable orders",
        "summary": "Get all unprocessable orders",
        "operationId": "Get all unprocessable orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllUnprocessableOrdersResponse"
            }
          }
        }
      }
    },
    "/orders/processing": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of orders in processing",
        "summary": "Get orders in Processing",
        "operationId": "Get all processing orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllProcessingOrdersResponse"
            }
          }
        }
      }
    },
    "/v1/external/orders/manifested": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of all manifest stage orders",
        "summary": "Get manifested orders",
        "operationId": "Get all manifested orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllManifestedOrdersResponse"
            }
          }
        }
      }
    },
    "/v1/external/orders/show/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get order and shipment details",
        "summary": "Get order Details",
        "operationId": "Get order",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The order id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            }
          }
        }
      }
    },
    "/v1/external/orders/fetch": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Fetch orders from all channels",
        "summary": "Fetch orders from channels",
        "operationId": "Fetch orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/external/orders/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Start order status sync from all channels",
        "summary": "Get status of sync from channels",
        "operationId": "Sync status",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/external/orders/cancel": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Cancels orders with given order ids\nDo not use this end point to cancel the order if the order has awb assigned and/or is in pickup stage.\nFor such orders see /v1/external/cancel/labeled or /v1/external/cancel/manifested.",
        "summary": "Cancel an order",
        "operationId": "Cancel orders",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/external/orders/fulfill": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Fulfillment",
        "summary": "Add inventory for order product",
        "operationId": "Fulfillment",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FulfillmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FulfillmentResponse"
              }
            }
          }
        }
      }
    },
    "/v1/external/orders/mapping": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Map unmapped order products",
        "summary": "Map orders products",
        "operationId": "Mapping",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MappingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MappingResponse"
              }
            }
          }
        }
      }
    },
    "/v1/external/orders/print/invoice": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Generates invoice and returns the PDF url for given order ids",
        "summary": "Generate Invoice",
        "operationId": "Generate invoice",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenerateInvoiceResponse"
              }
            }
          }
        }
      }
    },
    "/v1/external/orders/track": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get tracking data of all orders",
        "summary": "Get tracking Details",
        "operationId": "Track",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          }, {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }, {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackResponse"
            }
          }
        }
      }
    },
    "/v1/external/orders/address/update": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Change customer address in order data",
        "summary": "Update address for Order",
        "operationId": "Change address",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/external/orders/export": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Export CSV file containing company's Orders data",
        "operationId": "Export orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/external/orders/print/manifest": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Get urls of manifests containing the given order ID",
        "summary": "Get menifest for an order",
        "operationId": "Get manifests",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetManifestsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetManifestsResponse"
              }
            }
          }
        }
      }
    },
    "/v1/external/orders/create": {
      "post": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Create a linked order.",
        "summary": "Create Orders",
        "operationId": "Create linked order.",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLinkedOrder.Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateLinkedOrder.Response"
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/orders/import": {
      "post": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Import CSV containing orders data",
        "summary": "Import orders in Bulk",
        "operationId": "Bulk import2",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/orders/sample": {
      "get": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Export sample import file",
        "summary": "Get sample format for Orders Import",
        "operationId": "Bulk sample1",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/external/orders/create/adhoc": {
      "post": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Create a quick order.",
        "summary": "Create quick orders",
        "operationId": "Create quick order",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuickOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateQuickOrderResponse"
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/errors/{id}/check":{
      "get":{
        "tags": ["FIle Imports"],
        "summary": "Get file import results from Bulk order, products, listing imports.",
        "description": "Check Import Response",
        "parameters": [{
          "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
        }],
        "responses": {
          "200":{
            "description": "",
            "schema": {
              "$ref": "#definitions/fileImportResponse"
            }
          }
        }
      }
    },
    "/v1/external/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "description": "Get all shipments",
        "summary": "Get shipment Details",
        "operationId": "Get all shipments",
        "produces": ["application/json"],
        "parameters": [{
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/external/shipments/{id}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "description": "Get shipment details",
        "summary": "Get shipment Details of specific orders",
        "operationId": "Details",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The shipment id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailsResponse"
            }
          }
        }
      }
    },
    "/v1/external/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "Get a JSON representation of all products with their inventories",
        "summary": "Get Details of orders with inventories",
        "operationId": "Get inventories",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetInventoriesResponse"
            }
          }
        }
      }
    },
    "/v1/external/inventory/{id}/update": {
      "put": {
        "tags": [
          "Inventory"
        ],
        "description": "Update inventory for a given product",
        "summary": "Update Inventory for a specific product",
        "operationId": "Update inventory",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Product id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateInventoryResponse"
            }
          }
        }
      }
    },
    "/v1/external/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "description": "Get a list of all channels with details",
        "summary": "Get all channels",
        "operationId": "Get all2",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/courier/serviceability/": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of serviceability of courier companies list with pricing.\nExample is here :- /v1/courier/serviceability?pickup_postcode=110058\u0026delivery_postcode=110030\u0026weight=1.00\u0026cod=0",
        "summary": "Get serviceability of courier companies",
        "operationId": "Check serviceability",
        "produces": ["application/json"],
        "parameters": [{
            "name": "pickup_postcode",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Pickup postcode (must be 6 digits)"
          }, {
            "name": "delivery_postcode",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Delivery postcode (must be 6 digits)"
          }, {
            "name": "weight",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Shipment weight (must be in KG Ex:- 0.50)"
          }, {
            "name": "cod",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "payment method (Ex :- if cash on delivery then cod=1 ,for prepaid then cod=0)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckServiceabilityResponse"
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/courier/assign/awb": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of courier awb response for single and bulk awb assignment. Note:- your courier priority must be set, if you are using bulk awb assign method.",
        "summary": "Assgn AWB ",
        "operationId": "Awb creation",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "shipment id provided by SHIPROCKET in order api"
          }, {
            "name": "courier_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Courier company ids provided by SHIPROCKET in courier API (Required only in single awb assign request)"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwbCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbCreationResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/courier/generate/pickup": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of pickup response for single and bulk requests.",
        "summary": "Get Pickup Details",
        "operationId": "Pickup creation",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "shipment id provided by SHIPROCKET in order api"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickupCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PickupCreationResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/courier/generate/label": {
      "post": {
        "tags": [
          "Generate Label"
        ],
        "description": "Get a label URL. Note:- For label URL, AWB code must be assigned on shipment id.",
        "summary": "Generate Label",
        "operationId": "Generate Label",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "shipment id provided by SHIPROCKET in order api"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateLabelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenerateLabelResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/courier/track/awb/{awb_code}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Get a JSON of tracking data by AWB.",
        "summary": "Get AWB tracking Details",
        "operationId": "AWB Tracking",
        "produces": ["application/json"],
        "parameters": [{
            "name": "awb_code",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "awb code"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwbTrackingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbTrackingResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/courier/track/shipment/{shipment_id}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Get a JSON of tracking data by Shipment id.",
        "summary": "Get shipment Tracking Details",
        "operationId": "Shipment Tracking",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Shipment ID"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentTrackingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShipmentTrackingResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/billing/discrepancy": {
      "get": {
        "tags": [
          "Discrepancy"
        ],
        "description": "Get discrepancy data",
        "summary": "Get discrepancy Details",
        "operationId": "Discrepancy",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscrepancyResponse"
            }
          }
        }
      }
    },
    "/v1/account/details/statement": {
      "get": {
        "tags": [
          "Statement"
        ],
        "description": "Get statements data",
        "summary": "Get shipment Details",
        "operationId": "Satement",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          }, {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          }, {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }, {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Export the data in csv format"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SatementResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetTokenRequest": {
      "title": "Get token request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["email", "password"]
    },
    "GetTokenResponse": {
      "title": "Get token response",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["id", "first_name", "last_name", "email", "company_id", "created_at", "token"]
    },
    "GetCountriesResponse": {
      "title": "Get countries response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "object",
            "example": [{
                  "id": 1,
                  "name": "Afghanistan",
                  "iso_code_2": "AF",
                  "iso_code_3": "AFG",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 2,
                  "name": "Albania",
                  "iso_code_2": "AL",
                  "iso_code_3": "ALB",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 3,
                  "name": "Algeria",
                  "iso_code_2": "DZ",
                  "iso_code_3": "DZA",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 4,
                  "name": "American Samoa",
                  "iso_code_2": "AS",
                  "iso_code_3": "ASM",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 5,
                  "name": "Andorra",
                  "iso_code_2": "AD",
                  "iso_code_3": "AND",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 6,
                  "name": "Angola",
                  "iso_code_2": "AO",
                  "iso_code_3": "AGO",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 7,
                  "name": "Anguilla",
                  "iso_code_2": "AI",
                  "iso_code_3": "AIA",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 8,
                  "name": "Antarctica",
                  "iso_code_2": "AQ",
                  "iso_code_3": "ATA",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 9,
                  "name": "Antigua and Barbuda",
                  "iso_code_2": "AG",
                  "iso_code_3": "ATG",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 10,
                  "name": "Argentina",
                  "iso_code_2": "AR",
                  "iso_code_3": "ARG",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 11,
                  "name": "Armenia",
                  "iso_code_2": "AM",
                  "iso_code_3": "ARM",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 12,
                  "name": "Aruba",
                  "iso_code_2": "AW",
                  "iso_code_3": "ABW",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 13,
                  "name": "Australia",
                  "iso_code_2": "AU",
                  "iso_code_3": "AUS",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 14,
                  "name": "Austria",
                  "iso_code_2": "AT",
                  "iso_code_3": "AUT",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 15,
                  "name": "Azerbaijan",
                  "iso_code_2": "AZ",
                  "iso_code_3": "AZE",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 16,
                  "name": "Bahamas",
                  "iso_code_2": "BS",
                  "iso_code_3": "BHS",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 17,
                  "name": "Bahrain",
                  "iso_code_2": "BH",
                  "iso_code_3": "BHR",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 18,
                  "name": "Bangladesh",
                  "iso_code_2": "BD",
                  "iso_code_3": "BGD",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 19,
                  "name": "Barbados",
                  "iso_code_2": "BB",
                  "iso_code_3": "BRB",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 20,
                  "name": "Belarus",
                  "iso_code_2": "BY",
                  "iso_code_3": "BLR",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 21,
                  "name": "Belgium",
                  "iso_code_2": "BE",
                  "iso_code_3": "BEL",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 22,
                  "name": "Belize",
                  "iso_code_2": "BZ",
                  "iso_code_3": "BLZ",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 23,
                  "name": "Benin",
                  "iso_code_2": "BJ",
                  "iso_code_3": "BEN",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 24,
                  "name": "Bermuda",
                  "iso_code_2": "BM",
                  "iso_code_3": "BMU",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 25,
                  "name": "Bhutan",
                  "iso_code_2": "BT",
                  "iso_code_3": "BTN",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 26,
                  "name": "Bolivia",
                  "iso_code_2": "BO",
                  "iso_code_3": "BOL",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 27,
                  "name": "Bosnia and Herzegowina",
                  "iso_code_2": "BA",
                  "iso_code_3": "BIH",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 28,
                  "name": "Botswana",
                  "iso_code_2": "BW",
                  "iso_code_3": "BWA",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 29,
                  "name": "Bouvet Island",
                  "iso_code_2": "BV",
                  "iso_code_3": "BVT",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 30,
                  "name": "Brazil",
                  "iso_code_2": "BR",
                  "iso_code_3": "BRA",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 31,
                  "name": "British Indian Ocean Territory",
                  "iso_code_2": "IO",
                  "iso_code_3": "IOT",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 32,
                  "name": "Brunei Darussalam",
                  "iso_code_2": "BN",
                  "iso_code_3": "BRN",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 33,
                  "name": "Bulgaria",
                  "iso_code_2": "BG",
                  "iso_code_3": "BGR",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 34,
                  "name": "Burkina Faso",
                  "iso_code_2": "BF",
                  "iso_code_3": "BFA",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 35,
                  "name": "Burundi",
                  "iso_code_2": "BI",
                  "iso_code_3": "BDI",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 36,
                  "name": "Cambodia",
                  "iso_code_2": "KH",
                  "iso_code_3": "KHM",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 37,
                  "name": "Cameroon",
                  "iso_code_2": "CM",
                  "iso_code_3": "CMR",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 38,
                  "name": "Canada",
                  "iso_code_2": "CA",
                  "iso_code_3": "CAN",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 39,
                  "name": "Cape Verde",
                  "iso_code_2": "CV",
                  "iso_code_3": "CPV",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                },
                {
                  "id": 40,
                  "name": "Cayman Islands",
                  "iso_code_2": "KY",
                  "iso_code_3": "CYM",
                  "address_format": "",
                  "postcode_required": 0,
                  "status": 1
                }]
        }
      },
      "required": ["status", "data"]
    },
    "GetZonesResponse": {
      "title": "Get zones response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "object",
            "example": [{
                    "id": 1,
                    "country_id": 1,
                    "code": "BDS",
                    "name": "Badakhshan",
                    "status": 1
                  },
                  {
                    "id": 2,
                    "country_id": 1,
                    "code": "BDG",
                    "name": "Badghis",
                    "status": 1
                  },
                  {
                    "id": 3,
                    "country_id": 1,
                    "code": "BGL",
                    "name": "Baghlan",
                    "status": 1
                  },
                  {
                    "id": 4,
                    "country_id": 1,
                    "code": "BAL",
                    "name": "Balkh",
                    "status": 1
                  },
                  {
                    "id": 5,
                    "country_id": 1,
                    "code": "BAM",
                    "name": "Bamian",
                    "status": 1
                  },
                  {
                    "id": 6,
                    "country_id": 1,
                    "code": "FRA",
                    "name": "Farah",
                    "status": 1
                  },
                  {
                    "id": 7,
                    "country_id": 1,
                    "code": "FYB",
                    "name": "Faryab",
                    "status": 1
                  },
                  {
                    "id": 8,
                    "country_id": 1,
                    "code": "GHA",
                    "name": "Ghazni",
                    "status": 1
                  },
                  {
                    "id": 9,
                    "country_id": 1,
                    "code": "GHO",
                    "name": "Ghowr",
                    "status": 1
                  },
                  {
                    "id": 10,
                    "country_id": 1,
                    "code": "HEL",
                    "name": "Helmand",
                    "status": 1
                  },
                  {
                    "id": 11,
                    "country_id": 1,
                    "code": "HER",
                    "name": "Herat",
                    "status": 1
                  },
                  {
                    "id": 12,
                    "country_id": 1,
                    "code": "JOW",
                    "name": "Jowzjan",
                    "status": 1
                  },
                  {
                    "id": 13,
                    "country_id": 1,
                    "code": "KAB",
                    "name": "Kabul",
                    "status": 1
                  },
                  {
                    "id": 14,
                    "country_id": 1,
                    "code": "KAN",
                    "name": "Kandahar",
                    "status": 1
                  },
                  {
                    "id": 15,
                    "country_id": 1,
                    "code": "KAP",
                    "name": "Kapisa",
                    "status": 1
                  },
                  {
                    "id": 16,
                    "country_id": 1,
                    "code": "KHO",
                    "name": "Khost",
                    "status": 1
                  },
                  {
                    "id": 17,
                    "country_id": 1,
                    "code": "KNR",
                    "name": "Konar",
                    "status": 1
                  },
                  {
                    "id": 18,
                    "country_id": 1,
                    "code": "KDZ",
                    "name": "Kondoz",
                    "status": 1
                  },
                  {
                    "id": 19,
                    "country_id": 1,
                    "code": "LAG",
                    "name": "Laghman",
                    "status": 1
                  },
                  {
                    "id": 20,
                    "country_id": 1,
                    "code": "LOW",
                    "name": "Lowgar",
                    "status": 1
                  },
                  {
                    "id": 21,
                    "country_id": 1,
                    "code": "NAN",
                    "name": "Nangrahar",
                    "status": 1
                  },
                  {
                    "id": 22,
                    "country_id": 1,
                    "code": "NIM",
                    "name": "Nimruz",
                    "status": 1
                  },
                  {
                    "id": 23,
                    "country_id": 1,
                    "code": "NUR",
                    "name": "Nurestan",
                    "status": 1
                  },
                  {
                    "id": 24,
                    "country_id": 1,
                    "code": "ORU",
                    "name": "Oruzgan",
                    "status": 1
                  },
                  {
                    "id": 25,
                    "country_id": 1,
                    "code": "PIA",
                    "name": "Paktia",
                    "status": 1
                  },
                  {
                    "id": 26,
                    "country_id": 1,
                    "code": "PKA",
                    "name": "Paktika",
                    "status": 1
                  },
                  {
                    "id": 27,
                    "country_id": 1,
                    "code": "PAR",
                    "name": "Parwan",
                    "status": 1
                  },
                  {
                    "id": 28,
                    "country_id": 1,
                    "code": "SAM",
                    "name": "Samangan",
                    "status": 1
                  },
                  {
                    "id": 29,
                    "country_id": 1,
                    "code": "SAR",
                    "name": "Sar-e Pol",
                    "status": 1
                  },
                  {
                    "id": 30,
                    "country_id": 1,
                    "code": "TAK",
                    "name": "Takhar",
                    "status": 1
                  }]
        }
      },
      "required": ["status", "data"]
    },
    "GetProductsResponse": {
      "title": "Get products response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
            "example": [{
                    "id": 395,
                    "sku": "1234",
                    "name": "product2",
                    "description": "",
                    "category_code": "default",
                    "category_name": "Default Category",
                    "category_tax_code": "default",
                    "image": "",
                    "weight": "0.5 kg",
                    "size": "",
                    "cost_price": "0.00",
                    "mrp": "0.00",
                    "tax_code": "5",
                    "low_stock": 0,
                    "ean": "",
                    "upc": "",
                    "isbn": "",
                    "created_at": "27 Sep 2016 05:46 PM",
                    "updated_at": "4 Oct 2016 10:53 PM",
                    "quantity": 60,
                    "color": "",
                    "brand": "",
                    "dimensions": "10 x 10 x 10 cm",
                    "status": "ACTIVE",
                    "type": "Single"
                  },
                  {
                    "id": 394,
                    "sku": "1234567",
                    "name": "product1",
                    "description": "",
                    "category_code": "default",
                    "category_name": "Default Category",
                    "category_tax_code": "default",
                    "image": "",
                    "weight": "0.5 kg",
                    "size": "",
                    "cost_price": "0.00",
                    "mrp": "0.00",
                    "tax_code": "12_5",
                    "low_stock": 0,
                    "ean": "",
                    "upc": "",
                    "isbn": "",
                    "created_at": "27 Sep 2016 05:45 PM",
                    "updated_at": "27 Sep 2016 05:45 PM",
                    "quantity": 77,
                    "color": "",
                    "brand": "",
                    "dimensions": "10 x 10 x 10 cm",
                    "status": "ACTIVE",
                    "type": "Single"
                  },
                  {
                    "id": 393,
                    "sku": "123456",
                    "name": "Product1",
                    "description": "",
                    "category_code": "default",
                    "category_name": "Default Category",
                    "category_tax_code": "default",
                    "image": "",
                    "weight": "0.5 kg",
                    "size": "",
                    "cost_price": "0.00",
                    "mrp": "0.00",
                    "tax_code": "12_5",
                    "low_stock": 0,
                    "ean": "",
                    "upc": "",
                    "isbn": "",
                    "created_at": "27 Sep 2016 05:43 PM",
                    "updated_at": "27 Sep 2016 05:43 PM",
                    "quantity": 178,
                    "color": "",
                    "brand": "",
                    "dimensions": "10 x 10 x 10 cm",
                    "status": "ACTIVE",
                    "type": "Single"
            }]
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "AddRequest": {
      "title": "Add request",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "qty": {
          "type": "string"
        },
        "low_stock": {
          "type": "string"
        },
        "category_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "length": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "ean": {
          "type": "string"
        },
        "upc": {
          "type": "string"
        },
        "isbn": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "imei_serialnumber": {
          "type": "string"
        },
        "cost_price": {
          "type": "string"
        },
        "mrp": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "image_url": {
          "type": "string"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["sku", "name", "tax_code", "type", "qty", "low_stock", "category_code", "description", "brand", "size", "weight", "length", "width", "height", "ean", "upc", "isbn", "color", "imei_serialnumber", "cost_price", "mrp", "status", "image_url", "components"]
    },
    "ShowResponse": {
      "title": "Show response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "BulkImportRequest": {
      "title": "Bulk import request",
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        }
      },
      "required": ["file"]
    },
    "UpdateImeiRequest": {
      "title": "Update IMEI request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["data"]
    },
    "GetAllResponse": {
      "title": "Get all response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "MapRequest": {
      "title": "Map request",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "listing_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["product_id", "listing_id"]
    },
    "GetAllOrdersResponse": {
      "title": "Get all orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetAllUnprocessableOrdersResponse": {
      "title": "Get all unprocessable orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetAllProcessingOrdersResponse": {
      "title": "Get all processing orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetAllManifestedOrdersResponse": {
      "title": "Get all manifested orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetOrdersCountResponse": {
      "title": "Get orders count response",
      "type": "object",
      "properties": {
        "manifested_count": {
          "type": "integer",
          "format": "int32"
        },
        "processing_count": {
          "type": "integer",
          "format": "int32"
        },
        "unprocessing_count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["manifested_count", "processing_count", "unprocessing_count"]
    },
    "GetOrderResponse": {
      "title": "Get order response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "CancelOrdersRequest": {
      "title": "Cancel orders request",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["ids"]
    },
    "FulfillmentRequest": {
      "title": "Fulfillment request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["data"]
    },
    "FulfillmentResponse": {
      "title": "Fulfillment response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["data", "success", "message"]
    },
    "MappingRequest": {
      "title": "Mapping request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["data"]
    },
    "MappingResponse": {
      "title": "Mapping response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "status_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "required": ["data", "status_code", "message", "success"]
    },
    "GenerateInvoiceRequest": {
      "title": "Generate invoice request",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["ids"]
    },
    "GenerateInvoiceResponse": {
      "title": "Generate invoice response",
      "type": "object",
      "properties": {
        "is_invoice_created": {
          "type": "boolean"
        },
        "invoice_url": {
          "type": "string"
        },
        "not_created": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["is_invoice_created", "invoice_url", "not_created"]
    },
    "TrackResponse": {
      "title": "Track response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "ChangeAddressRequest": {
      "title": "Change address request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_customer_name": {
          "type": "string"
        },
        "shipping_phone": {
          "type": "string"
        },
        "shipping_address": {
          "type": "string"
        },
        "shipping_address_2": {
          "type": "string"
        },
        "shipping_city": {
          "type": "string"
        },
        "shipping_state": {
          "type": "string"
        },
        "shipping_country": {
          "type": "string"
        },
        "shipping_pincode": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["order_id", "shipping_customer_name", "shipping_phone", "shipping_address", "shipping_address_2", "shipping_city", "shipping_state", "shipping_country", "shipping_pincode"]
    },
    "GetManifestsRequest": {
      "title": "Get manifests request",
      "type": "object",
      "properties": {
        "order_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["order_ids"]
    },
    "GetManifestsResponse": {
      "title": "Get manifests response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["data"]
    },
    "CreateLinkedOrder.Request": {
      "title": "Create linked order. request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "order_date": {
          "type": "string"
        },
        "channel_id": {
          "type": "integer",
          "format": "int32"
        },
        "billing_customer_name": {
          "type": "string"
        },
        "billing_last_name": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        },
        "billing_address_2": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_state": {
          "type": "string"
        },
        "billing_country": {
          "type": "string"
        },
        "billing_pincode": {
          "type": "string"
        },
        "billing_email": {
          "type": "string"
        },
        "billing_phone": {
          "type": "string"
        },
        "shipping_is_billing": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_customer_name": {
          "type": "string"
        },
        "shipping_last_name": {
          "type": "string"
        },
        "shipping_address": {
          "type": "string"
        },
        "shipping_address_2": {
          "type": "string"
        },
        "shipping_city": {
          "type": "string"
        },
        "shipping_country": {
          "type": "string"
        },
        "shipping_pincode": {
          "type": "string"
        },
        "shipping_state": {
          "type": "string"
        },
        "shipping_email": {
          "type": "string"
        },
        "shipping_phone": {
          "type": "string"
        },
        "order_items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "payment_method": {
          "type": "string"
        },
        "shipping_charges": {
          "type": "string"
        },
        "giftwrap_charges": {
          "type": "string"
        },
        "transaction_charges": {
          "type": "string"
        },
        "total_discount": {
          "type": "string"
        },
        "sub_total": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["order_id", "order_date", "channel_id", "billing_customer_name", "billing_last_name", "billing_address", "billing_address_2", "billing_city", "billing_state", "billing_country", "billing_pincode", "billing_email", "billing_phone", "shipping_is_billing", "shipping_customer_name", "shipping_last_name", "shipping_address", "shipping_address_2", "shipping_city", "shipping_country", "shipping_pincode", "shipping_state", "shipping_email", "shipping_phone", "order_items", "payment_method", "shipping_charges", "giftwrap_charges", "transaction_charges", "total_discount", "sub_total"]
    },
    "CreateLinkedOrder.Response": {
      "title": "Create linked order. response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "status_code": {
          "type": "string"
        }
      },
      "required": ["status", "status_code"]
    },
    "CreateQuickOrderRequest": {
      "title": "Create quick order request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "order_date": {
          "type": "string"
        },
        "channel_id": {
          "type": "integer",
          "format": "int32"
        },
        "billing_customer_name": {
          "type": "string"
        },
        "billing_last_name": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        },
        "billing_address_2": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_state": {
          "type": "string"
        },
        "billing_country": {
          "type": "string"
        },
        "billing_pincode": {
          "type": "string"
        },
        "billing_email": {
          "type": "string"
        },
        "billing_phone": {
          "type": "string"
        },
        "shipping_is_billing": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_customer_name": {
          "type": "string"
        },
        "shipping_last_name": {
          "type": "string"
        },
        "shipping_address": {
          "type": "string"
        },
        "shipping_address_2": {
          "type": "string"
        },
        "shipping_city": {
          "type": "string"
        },
        "shipping_country": {
          "type": "string"
        },
        "shipping_pincode": {
          "type": "string"
        },
        "shipping_state": {
          "type": "string"
        },
        "shipping_email": {
          "type": "string"
        },
        "shipping_phone": {
          "type": "string"
        },
        "order_items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "payment_method": {
          "type": "string"
        },
        "shipping_charges": {
          "type": "integer",
          "format": "int32"
        },
        "giftwrap_charges": {
          "type": "integer",
          "format": "int32"
        },
        "transaction_charges": {
          "type": "integer",
          "format": "int32"
        },
        "total_discount": {
          "type": "integer",
          "format": "int32"
        },
        "sub_total": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["order_id", "order_date", "channel_id", "billing_customer_name", "billing_last_name", "billing_address", "billing_address_2", "billing_city", "billing_state", "billing_country", "billing_pincode", "billing_email", "billing_phone", "shipping_is_billing", "shipping_customer_name", "shipping_last_name", "shipping_address", "shipping_address_2", "shipping_city", "shipping_country", "shipping_pincode", "shipping_state", "shipping_email", "shipping_phone", "order_items", "payment_method", "shipping_charges", "giftwrap_charges", "transaction_charges", "total_discount", "sub_total"]
    },
    "CreateQuickOrderResponse": {
      "title": "Create quick order response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "status_code": {
          "type": "string"
        }
      },
      "required": ["status", "status_code"]
    },
    "DetailsResponse": {
      "title": "Details response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "GetInventoriesResponse": {
      "title": "Get inventories response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "UpdateInventoryResponse": {
      "title": "Update inventory response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "CheckServiceabilityResponse": {
      "title": "Check serviceability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "PickupAvailabilityResponse": {
      "title": "Pickup availability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "DeliveryAvailabilityResponse": {
      "title": "Delivery availability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "SetCouriersPreferencesRequest": {
      "title": "Set couriers preferences request",
      "type": "object",
      "properties": {
        "courier_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["courier_id"]
    },
    "SetCouriersPreferencesResponse": {
      "title": "Set couriers preferences response",
      "type": "object",
      "properties": {
        "courier_name": {
          "type": "string"
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        },
        "preference_id": {
          "type": "integer",
          "format": "int32"
        },
        "address_id": {
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string"
        }
      },
      "required": ["courier_name", "courier_id", "preference_id", "address_id", "company_id", "date"]
    },
    "GetCouriersListResponse": {
      "title": "Get couriers list response",
      "type": "object",
      "properties": {
        "couriers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["couriers"]
    },
    "SetCouriersPriorityRequest": {
      "title": "Set couriers priority request",
      "type": "object",
      "properties": {
        "courier_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["courier_id"]
    },
    "SetCouriersPriorityResponse": {
      "title": "Set couriers priority response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["status"]
    },
    "GetCouriersPreferencesResponse": {
      "title": "Get couriers preferences response",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "preference_id": {
          "type": "integer",
          "format": "int32"
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        },
        "courier_name": {
          "type": "string"
        }
      },
      "required": ["id", "preference_id", "courier_id", "courier_name"]
    },
    "AwbCreationRequest": {
      "title": "Awb creation request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["shipment_id", "courier_id"]
    },
    "AwbCreationResponse": {
      "title": "Awb creation response",
      "type": "object",
      "properties": {
        "awb_assign_status": {
          "type": "integer",
          "format": "int32"
        },
        "response": {
          "type": "object"
        }
      },
      "required": ["awb_assign_status", "response"]
    },
    "AwbCreationRequest51": {
      "title": "Awb creation request51",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "PickupCreationRequest": {
      "title": "Pickup creation request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "PickupCreationResponse": {
      "title": "Pickup creation response",
      "type": "object",
      "properties": {
        "pickup_status": {
          "type": "integer",
          "format": "int32"
        },
        "response": {
          "type": "object"
        },
        "manifest_url": {
          "type": "string"
        }
      },
      "required": ["pickup_status", "response", "manifest_url"]
    },
    "GenerateLabelRequest": {
      "title": "Generate Label request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "GenerateLabelResponse": {
      "title": "Generate Label response",
      "type": "object",
      "properties": {
        "label_created": {
          "type": "integer",
          "format": "int32"
        },
        "label_url": {
          "type": "string"
        },
        "response": {
          "type": "string"
        }
      },
      "required": ["label_created", "label_url", "response"]
    },
    "AwbTrackingRequest": {
      "title": "AWB Tracking request",
      "type": "object",
      "properties": {
        "awb_code": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["awb_code"]
    },
    "AwbTrackingResponse": {
      "title": "AWB Tracking response",
      "type": "object",
      "properties": {
        "tracking_data": {
          "type": "object"
        }
      },
      "required": ["tracking_data"]
    },
    "ShipmentTrackingRequest": {
      "title": "Shipment Tracking request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "ShipmentTrackingResponse": {
      "title": "Shipment Tracking response",
      "type": "object",
      "properties": {
        "tracking_data": {
          "type": "object"
        }
      },
      "required": ["tracking_data"]
    },
    "DiscrepancyResponse": {
      "title": "Discrepancy response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "upper_fold_text": {
          "type": "string"
        },
        "lower_fild_text": {
          "type": "string"
        }
      },
      "required": ["status", "data", "upper_fold_text", "lower_fild_text"]
    },
    "fileImportResponse":{
      "title": "Import Response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
        "required": ["data"]
    },
    "SatementResponse": {
      "title": "Satement response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    }
  }
}