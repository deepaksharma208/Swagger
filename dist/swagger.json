{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "ShiprocketAPI",
    "description": "Welcome to ShipRocket’s API Documentation. Get a clear understanding of all the sections and codes that are used in ShipRocket’s API. ShipRocket API uses the JSON syntax. \n \n First you need to register with ShipRocket and create an account. Simply click on this [link](https://app.shiprocket.in/register) to complete the simple sign up process.\n \n Please note that to utilise the ShipRocket API's, you need to [upgrade](https://app.shiprocket.in/billing-plan-details) your plan to Advance or Pro. To get access to use the API's, you need to call to +91-9266623006 our customer care or send a mail to srs@kartrocket.com, stating that you would like to use ShipRocket Open API's. After that you will have to provide an alternate email id which will be used for the ShipRocket API."
  },
  "host": "apiv2.shiprocket.in",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "The api token provided by login api"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "Create/Update Order"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Shipments"
    },
    {
      "name": "Couriers"
    },
    {
      "name": "Tracking"
    },
    {
      "name": "Label | Manifests | Invoice"
    },
    {
      "name": "Products"
    },
    {
      "name": "Listings"
    },
    {
      "name": "Channels"
    },
    {
      "name": "Inventory"
    },
    {
      "name": "Statement"
    },
    {
      "name": "Discrepancy"
    },
    {
      "name": "File Imports"
    },
    {
      "name": "Countries"
    },
    {
      "name": "Pickup Address"
    }
  ],
  "paths": {
    "/v1/external/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "The token is the authorization key that you need to pass before using the ShipRocket API's. \n\nGenerating the token is an extremely simple process. Simply type in your email id (alternate id for the ShipRocket API) and all your details will be generated.\n \n| Steps to Use Token\n  -----|\n 1. Copy the ***Token*** recieved in Response. \n2. Click on ***Authorize*** Button.\n3. Type ***Bearer &lt;token&gt;*** in the ***Value***.\n4. Click on ***Authorize*** and close the pop-up.\n5. Now you can use all the api's.",
        "summary": "Access Token",
        "operationId": "Get token",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTokenResponse"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/400Error"
            }
          },
          "422": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/login422Error"
            }
          }
        }
      }
    },
    "/v1/external/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Shows all the countries which are present in the ShipRocket database. ShipRocket API provides ISO Code 2 and ISO Code 3 country options and has a total of 44 countries in its database. This allows you to use these countries in your own dropdown menu.",
        "summary": "Countries",
        "operationId": "Get countries",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCountriesResponse"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/countries/show/{id}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Shows all the zones which are present within a country.",
        "summary": "Get all zones",
        "operationId": "Get zones",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The specific id of the country in integer format"
          }
        ],
        "responses": {
          "200": {
            "description": "Name of the specific zone",
            "schema": {
              "$ref": "#/definitions/GetZonesResponse"
            }
          },
          "404": {
            "description": "404 not found",
            "schema": {
              "$ref": "#/definitions/404Error"
            }
          }
        }
      }
    },
    "/v1/external/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Shows all the details of all the products that a ShipRocket user has. This can be filtered according to details like number of products per page, ascending or descending sorting order. ",
        "summary": "Get Products",
        "operationId": "Get products",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The page number which is to be displayed"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The total number of products in each page"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Whether to arrange the items in ascending or descending order(DESC, ASC)"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Value by which the results will be filtered"
          },
          {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Validation of filtered value (data to be matched)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/401Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Add new product",
        "summary": "Add new Products",
        "operationId": "Add",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          },
          "422": {
            "description": "invalid data",
            "schema": {
              "$ref": "#/definitions/addProduct422"
            }
          }
        }
      }
    },
    "/v1/external/products/show/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Shows individual product details",
        "summary": "Show",
        "operationId": "Show",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id = The product id which is to be shown and the input should be in an integer format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShowResponse"
            }
          },
          "400": {
            "description": "invalid product id",
            "schema": {
              "$ref": "#/definitions/show400"
            }
          },
          "404": {
            "description": "no id provided",
            "schema": {
              "$ref": "#/definitions/404Error"
            }
          }
        }
      }
    },
    "/v1/external/products/import": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "This section shows the API for exporting the data of all your product and inventory details from the ShipRocket panel.",
        "summary": "Bulk import",
        "operationId": "Bulk import",
        "consumes": [
          "multipart/form-data"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/productImportResponse"
            }
          },
          "403": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/import403"
            }
          }
        }
      }
    },
    "/v1/external/products/export": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Downloads all Products Details in CSV format",
        "summary": "Bulk Sample",
        "operationId": "Bulk export",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "import succes",
            "schema": {
              "$ref": "#/definitions/bulkExportResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          }
        }
      }
    },
    "/v1/external/products/sample": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Export a sample CSV file for importing",
        "summary": "Get a sample format to Import Products",
        "operationId": "Bulk sample",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1/external/settings/company/pickup": {
      "get": {
        "tags": [
          "Pickup Address"
        ],
        "description": "Get Your pickup locations",
        "summary": "Get All Pickup locations",
        "operationId": "get pickup locations",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetPickupResponse"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          }
        }
      }
    },
    "/v1/external/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Get a JSON representation of all listings",
        "summary": "Get all Listings",
        "operationId": "Get all",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of the data which is to be displayed"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of channel orders listed in each page"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The order in which the listings should be sorted"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Value by which the results will be filtered"
          },
          {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Validation of filtered value (data to be matched)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllResponse"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          }
        }
      }
    },
    "/v1/external/listings/import": {
      "post": {
        "tags": [
          "Listings"
        ],
        "description": "Import CSV containing channel catalog to master catalog mappings",
        "summary": "Import Catalog mappings",
        "operationId": "Bulk import1",
        "consumes": [
          "multipart/form-data"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "400": {
            "description": "File required",
            "schema": {
              "$ref": "#/definitions/listing400"
            }
          }
        }
      }
    },
    "/v1/external/listings/export/mapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export mapped- Downloads the list of mapped items in the channel catalog sheet. After mapping items you can see the number of products of one channel, which are present in the Master Catalog.",
        "summary": "Export Mapped",
        "operationId": "Export mapped",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bulkExportResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/listings/export/unmapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Downloads the list of unmapped items in the channel catalog sheet.",
        "summary": "Export Unmapped",
        "operationId": "Export un-mapped",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bulkExportResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/listings/sample": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Downloads a sample of the catalog sheet.",
        "summary": "Export sample",
        "operationId": "Export sample",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bulkExportResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/listings/link": {
      "post": {
        "tags": [
          "Listings"
        ],
        "description": "This API helps you map your channel product to a product present in master catalog",
        "summary": "Map",
        "operationId": "Map",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Linking success",
            "schema": {}
          },
          "400": {
            "description": "Input not Defined",
            "schema": {
              "$ref": "#/definitions/400Error"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "The ShipRocket API for getting all the orders of a single seller. In this API the product and shipment activities will have sub arrays for individual products and shipments.\n\nBelow are the order status codes used: \n \n  Order Status Code | Descrition\n  ----- | -----\n  1 | New\n  2 | Invoiced\n  3 | Ready To Ship\n  4 | Pickup Scheduled\n  5 | Cancelled\n  6 | Shipped\n  7 | Delivered\n  8 | e-Payment Failed\n  9 | Returned\n  10 | Unmapped\n  11 | Out of Stock\n  12 | Pickup Queued\n  13 | Pickup Rescheduled\n  14 | Pickup error// Created when there is an error on pickup schedule\n  15 | RTO initiated\n  16 | RTO delivered\n  17 | RTO Acknowledged\n  18 | Cancellation Request\n  19 | Out for Delivery\n  20 | In Transit",
        "summary": "Get all orders",
        "operationId": "Get all orders",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          },
          {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/orders/show/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get order and shipment details",
        "summary": "Get order Details",
        "operationId": "Get order",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The order id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/orders/fetch": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Starts a background job which will fetch orders from all channels.",
        "summary": "Fetch Orders from channel into Shiprocet App",
        "operationId": "Fetch orders",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "",
            "schema": {}
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/orders/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "This API runs a status sync which pulls out the changes in order status and syncs them in the panel",
        "summary": "Sync status",
        "operationId": "Sync status",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "",
            "schema": {}
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/orders/create/adhoc": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Pass all the required order fields to create a quick order. Quick order are the ones where we do not store the product details in master catalog.",
        "summary": "Create Custom order",
        "operationId": "Create Custom order",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuickOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateQuickOrderResponse"
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {
              "$ref": "#/definitions/import403"
            }
          }
        }
      }
    },
    "/v1/external/orders/create": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Shows the details of the order which needs to be created",
        "summary": "Create Channel Order",
        "operationId": "Create linked order.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLinkedOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateLinkedOrderResponse"
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {
              "$ref": "#/definitions/import403"
            }
          }
        }
      }
    },
    "/v1/external/orders/fulfill": {
      "patch": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "This API allows you to add inventory for order product by passing the order id and order product id",
        "summary": "Add inventory for order product",
        "operationId": "Fulfillment",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FulfillmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FulfillmentResponse"
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          },
          "422": {
            "description": "#/definitions/login422Error"
          }
        }
      }
    },
    "/v1/external/orders/mapping": {
      "patch": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Map unmapped order products",
        "summary": "Map orders products",
        "operationId": "Mapping",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MappingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MappingResponse"
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          },
          "422": {
            "description": "#/definitions/login422Error"
          }
        }
      }
    },
    "/v1/external/orders/print/invoice": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "description": "Generates an invoice for an order through the **order id**. You can pass multiple order id’s as well, to generate their response",
        "summary": "Generate Invoice",
        "operationId": "Generate invoice",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenerateInvoiceResponse"
              }
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          },
          "422": {
            "description": "#/definitions/login422Error"
          }
        }
      }
    },
    "/v1/external/orders/address/update": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Update the customer’s delivery address by passing the order id in the given below API",
        "operationId": "Change address",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeAddressRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Address updated",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/orders/cancel": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Cancel the orders by passing their order ID’s in the given below API.",
        "summary": "Cancel an order",
        "operationId": "Cancel orders",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancel request taken",
            "schema": {
              "$ref": "#/definitions/CancelOrdersResponse"
            }
          },
          "204": {
            "description": "unprocessable input"
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          },
          "422": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/login422Error"
            }
          }
        }
      }
    },
    "/v1/external/orders/export": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Displays the URL of the CSV sheet of downloaded orders as a response",
        "operationId": "Export orders",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bulkExportResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/orders/print/manifest": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "description": "Prints the manifest of the order id on the assumption that the manifest is created",
        "summary": "Get manifest",
        "operationId": "Get manifests",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetManifestsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetManifestsResponse"
              }
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/404Error"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/export401"
            }
          },
          "405": {
            "description": "method not allowed",
            "schema": {
              "$ref": "#/definitions/405Error"
            }
          }
        }
      }
    },
    "/v1/external/manifests/generate": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "description": "Generate Manifests for single order or bulk orders.\n\n&lowast;***This should be used if print manifest doesn't return any URL***&lowast;",
        "summary": "Generate Manifests",
        "operationId": "generate manifest",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/generateManifestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manifests generated Successfully",
            "schema": {
              "$ref": "#/definitions/generateManifestResponse"
            }
          }
        }
      }
    },
    "/v1/external/orders/import": {
      "post": {
        "tags": [
          "Create/Update Order"
        ],
        "description": "Import orders in bulk to your Shiprocket panel from a csv file",
        "summary": "Bulk Import",
        "operationId": "Bulk import2",
        "consumes": [
          "multipart/form-data"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/orders/sample": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get sample format for Orders Import excel file",
        "summary": "Get sample format for Orders Import",
        "operationId": "Bulk sample1",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/external/errors/{id}/check": {
      "get": {
        "tags": [
          "File Imports"
        ],
        "summary": "Get file import results from Bulk order, products, listing imports.",
        "description": "Check Import Response",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/fileImportResponse"
            }
          }
        }
      }
    },
    "/v1/external/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "description": "Get details of all shipments",
        "summary": "Get shipment Details",
        "operationId": "Get all shipments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          },
          {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/external/shipments/{id}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "description": "Get details of specified shipment ID",
        "summary": "Get shipment Details of specific orders",
        "operationId": "Details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The shipment id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailsResponse"
            }
          }
        }
      }
    },
    "/v1/external/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "Checks the availability of inventory according to the SKU",
        "summary": "Get Details of orders with inventories",
        "operationId": "Get inventories",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The page number which is to be displayed"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The total number of products in each page in an integer format"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Whether to arrange the items in ascending or descending order"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Allows to choose the value field by which the items will be sorted. Could be sorted by id, by sku, time created etc."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetInventoriesResponse"
            }
          }
        }
      }
    },
    "/v1/external/inventory/{id}/update": {
      "put": {
        "tags": [
          "Inventory"
        ],
        "description": "Through this API you can make changes to the inventory listings in your ShipRocket panel",
        "summary": "Update Inventory",
        "operationId": "Update inventory",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "You have to pass the product id of the inventory which is to be updated"
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The specific number which needs to be changed"
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Added = The number is added to the inventory\nReplace = The original number is replaced by the specific number\nRemove = The specific number is deducted from the opening number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateInventoryResponse"
            }
          }
        }
      }
    },
    "/v1/external/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "description": "The ShipRocket API for getting the data of all integrated channels in the ShipRocket account. ",
        "summary": "Get all channels",
        "operationId": "Get all2",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/channelsResponse"
            }
          }
        }
      }
    },
    "/v1/external/courier/serviceability/": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Shows the number of courier companies available for delivery from pickup point to customer delivery code, along with the estimated delivery time in days.",
        "summary": "Check Serviceability",
        "operationId": "Check serviceability",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pickup_postcode",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The pincode of the location from where the shipment is supposed to be picked up, in an integer format"
          },
          {
            "name": "delivery_postcode",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The pincode of the location where the shipment is supposed to be delivered, in an integer format"
          },
          {
            "name": "length",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Length in meters"
          },
          {
            "name": "breadth",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "breadth in meters"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "height in meters"
          },
          {
            "name": "weight",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Shipment weight, in kgs"
          },
          {
            "name": "cod",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "If cash on delivery is required or not. Required =1, Prepaid =0"
          },
          {
            "name": "declared_value",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Price of the order"
          },
          {
            "name": "restricted_couriers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Courier Ids which should be excluded"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Surface/Air"
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Order id of the shipment"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serviceable courier compnies along with pricing",
            "schema": {
              "$ref": "#/definitions/CheckServiceabilityResponse"
            }
          },
          "404": {
            "description": "Postcode is not serviceable by SHIPROCKET",
            "schema": {
              "$ref": "#/definitions/CheckServiceabilityError"
            }
          }
        }
      }
    },
    "/v1/external/courier/assign/awb": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "The ShipRocket API for generating the Air Waybill number for your shipment. You can get a single AWB or bulk AWB’s . It also gives you the option to reassign the AWB number",
        "summary": "AWB Creation",
        "operationId": "Awb Creation",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwbCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbCreationResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbError500"
            }
          }
        }
      }
    },
    "/v1/external/courier/generate/pickup": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of pickup response for single and bulk requests.",
        "summary": "Get Pickup Details",
        "operationId": "Pickup creation",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickupCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PickupCreationResponse"
            }
          },
          "500": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/courier/generate/label": {
      "post": {
        "tags": [
          "Label | Manifests | Invoice"
        ],
        "description": "Get a label URL. Note:- For label URL, AWB code must be assigned on shipment id.",
        "summary": "Generate Label",
        "operationId": "Generate Label",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateLabelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenerateLabelResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/courier/track/awb/{awb_code}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Get a JSON of tracking data by AWB.",
        "summary": "Get AWB tracking Details",
        "operationId": "AWB Tracking",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "awb_code",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "awb code"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwbTrackingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbTrackingResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/courier/track/shipment/{shipment_id}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Get a JSON of tracking data by Shipment id.",
        "summary": "Get shipment Tracking Details",
        "operationId": "Shipment Tracking",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Shipment ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentTrackingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShipmentTrackingResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        }
      }
    },
    "/v1/external/billing/discrepancy": {
      "get": {
        "tags": [
          "Discrepancy"
        ],
        "description": "Get discrepancy data",
        "summary": "Get discrepancy Details",
        "operationId": "Discrepancy",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscrepancyResponse"
            }
          }
        }
      }
    },
    "/v1/external/account/details/statement": {
      "get": {
        "tags": [
          "Statement"
        ],
        "description": "Get statements data",
        "summary": "Get statement Details",
        "operationId": "Satement",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Export the data in csv format"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatementResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetTokenRequest": {
      "title": "Get token request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Prompts the user to type their email id",
          "example": "abcd@xyz.com"
        },
        "password": {
          "type": "string",
          "description": "Prompts the user to type their selected password",
          "example": "abcd1234"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "400Error": {
      "title": "400 error Bad Request",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "These credentials do not match our records."
        },
        "status_code": {
          "type": "integer",
          "example": 400
        }
      }
    },
    "login422Error": {
      "title": "422 error unprocessable input",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Error in input"
        },
        "errors": {
          "type": "object",
          "properties": {
            "email": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "The email field is required."
              }
            },
            "password": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "The password field is required."
              }
            }
          }
        },
        "status_code": {
          "type": "integer",
          "example": 422
        }
      }
    },
    "GetTokenResponse": {
      "title": "Get token response",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "user’s unique user id",
          "example": 1
        },
        "first_name": {
          "type": "string",
          "description": "first name of the user",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "description": "last name of the user",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "description": "email of the user",
          "example": "abcd@xyz.com"
        },
        "company_id": {
          "type": "integer",
          "description": "company id of the user",
          "format": "int32",
          "example": 12
        },
        "created_at": {
          "type": "string",
          "description": "date of creation",
          "format": "dateTime"
        },
        "token": {
          "type": "string",
          "description": "necessary token number",
          "example": "huiyd878y823hh2hdu232h"
        }
      },
      "required": [
        "id",
        "first_name",
        "last_name",
        "email",
        "company_id",
        "created_at",
        "token"
      ]
    },
    "405Error": {
      "title": "Post method instead of Get or vice versa",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "method not allowed"
        },
        "status_code": {
          "type": "integer",
          "example": 405
        }
      }
    },
    "GetCountriesResponse": {
      "title": "Get countries response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status of response from server",
          "format": "int32",
          "example": "200"
        },
        "data": {
          "type": "object",
          "description": "Arrayed data",
          "example": [
            {
              "id": 1,
              "name": "Afghanistan",
              "iso_code_2": "AF",
              "iso_code_3": "AFG",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 2,
              "name": "Albania",
              "iso_code_2": "AL",
              "iso_code_3": "ALB",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 3,
              "name": "Algeria",
              "iso_code_2": "DZ",
              "iso_code_3": "DZA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 4,
              "name": "American Samoa",
              "iso_code_2": "AS",
              "iso_code_3": "ASM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 5,
              "name": "Andorra",
              "iso_code_2": "AD",
              "iso_code_3": "AND",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 6,
              "name": "Angola",
              "iso_code_2": "AO",
              "iso_code_3": "AGO",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 7,
              "name": "Anguilla",
              "iso_code_2": "AI",
              "iso_code_3": "AIA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 8,
              "name": "Antarctica",
              "iso_code_2": "AQ",
              "iso_code_3": "ATA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 9,
              "name": "Antigua and Barbuda",
              "iso_code_2": "AG",
              "iso_code_3": "ATG",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 10,
              "name": "Argentina",
              "iso_code_2": "AR",
              "iso_code_3": "ARG",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 11,
              "name": "Armenia",
              "iso_code_2": "AM",
              "iso_code_3": "ARM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 12,
              "name": "Aruba",
              "iso_code_2": "AW",
              "iso_code_3": "ABW",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 13,
              "name": "Australia",
              "iso_code_2": "AU",
              "iso_code_3": "AUS",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 14,
              "name": "Austria",
              "iso_code_2": "AT",
              "iso_code_3": "AUT",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 15,
              "name": "Azerbaijan",
              "iso_code_2": "AZ",
              "iso_code_3": "AZE",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 16,
              "name": "Bahamas",
              "iso_code_2": "BS",
              "iso_code_3": "BHS",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 17,
              "name": "Bahrain",
              "iso_code_2": "BH",
              "iso_code_3": "BHR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 18,
              "name": "Bangladesh",
              "iso_code_2": "BD",
              "iso_code_3": "BGD",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 19,
              "name": "Barbados",
              "iso_code_2": "BB",
              "iso_code_3": "BRB",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 20,
              "name": "Belarus",
              "iso_code_2": "BY",
              "iso_code_3": "BLR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 21,
              "name": "Belgium",
              "iso_code_2": "BE",
              "iso_code_3": "BEL",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 22,
              "name": "Belize",
              "iso_code_2": "BZ",
              "iso_code_3": "BLZ",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 23,
              "name": "Benin",
              "iso_code_2": "BJ",
              "iso_code_3": "BEN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 24,
              "name": "Bermuda",
              "iso_code_2": "BM",
              "iso_code_3": "BMU",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 25,
              "name": "Bhutan",
              "iso_code_2": "BT",
              "iso_code_3": "BTN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 26,
              "name": "Bolivia",
              "iso_code_2": "BO",
              "iso_code_3": "BOL",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 27,
              "name": "Bosnia and Herzegowina",
              "iso_code_2": "BA",
              "iso_code_3": "BIH",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 28,
              "name": "Botswana",
              "iso_code_2": "BW",
              "iso_code_3": "BWA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 29,
              "name": "Bouvet Island",
              "iso_code_2": "BV",
              "iso_code_3": "BVT",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 30,
              "name": "Brazil",
              "iso_code_2": "BR",
              "iso_code_3": "BRA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 31,
              "name": "British Indian Ocean Territory",
              "iso_code_2": "IO",
              "iso_code_3": "IOT",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 32,
              "name": "Brunei Darussalam",
              "iso_code_2": "BN",
              "iso_code_3": "BRN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 33,
              "name": "Bulgaria",
              "iso_code_2": "BG",
              "iso_code_3": "BGR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 34,
              "name": "Burkina Faso",
              "iso_code_2": "BF",
              "iso_code_3": "BFA",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 35,
              "name": "Burundi",
              "iso_code_2": "BI",
              "iso_code_3": "BDI",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 36,
              "name": "Cambodia",
              "iso_code_2": "KH",
              "iso_code_3": "KHM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 37,
              "name": "Cameroon",
              "iso_code_2": "CM",
              "iso_code_3": "CMR",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 38,
              "name": "Canada",
              "iso_code_2": "CA",
              "iso_code_3": "CAN",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 39,
              "name": "Cape Verde",
              "iso_code_2": "CV",
              "iso_code_3": "CPV",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            },
            {
              "id": 40,
              "name": "Cayman Islands",
              "iso_code_2": "KY",
              "iso_code_3": "CYM",
              "address_format": "",
              "postcode_required": 0,
              "status": 1
            }
          ]
        }
      },
      "required": [
        "status",
        "data"
      ]
    },
    "channelsResponse": {
      "title": "get channels response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The respective channel id’s of the various channels which are to be integrated with the ShipRocket panel.",
                "example": 1234
              },
              "name": {
                "type": "string",
                "description": "",
                "example": "Manual"
              },
              "status": {
                "type": "string",
                "description": "",
                "example": "Active"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "dimensions": {
                    "type": "string",
                    "description": "",
                    "example": "0x0x0"
                  },
                  "weight": {
                    "type": "integer",
                    "description": "",
                    "example": 0
                  },
                  "order_status": {
                    "type": "string",
                    "description": "",
                    "example": "Pending, COD"
                  }
                },
                "description": "Channel Settings"
              },
              "auth": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "store_url": {
                      "type": "string",
                      "description": "store web address",
                      "example": "https://test.example.com"
                    },
                    "api_username": {
                      "type": "string",
                      "example": "Hell0W012Ld"
                    },
                    "api_key": {
                      "type": "string",
                      "description": "",
                      "example": "helloworld"
                    }
                  }
                },
                "description": ""
              },
              "connections": {
                "type": "integer",
                "description": "",
                "example": 1
              },
              "orders_sync": {
                "type": "integer",
                "description": "Syncing On / Off",
                "example": 1
              },
              "inventory_sync": {
                "type": "integer",
                "description": "Inventory Sync On / Off",
                "example": 0
              },
              "orders_synced_on": {
                "type": "string",
                "description": "Last Order Sync date or some message",
                "example": "13 Apr 11:15 AM"
              },
              "inventory_synced_on": {
                "type": "string",
                "description": "Last Inventory Sync date or some message",
                "example": "13 Apr 11:15 AM"
              },
              "base_channel_code": {
                "type": "string",
                "description": "The two letter code for the respective channels. Please note that the “Manual” channel",
                "example": "CS"
              },
              "base_channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "",
                    "example": 4
                  },
                  "name": {
                    "type": "string",
                    "description": "Channel Name",
                    "example": "Manual"
                  },
                  "code": {
                    "type": "string",
                    "description": "",
                    "example": "CS"
                  },
                  "type": {
                    "type": "string",
                    "description": "type of channel",
                    "example": "Carts"
                  },
                  "logo": {
                    "type": "string",
                    "description": "Logo for channel",
                    "example": "channel.png"
                  },
                  "settings_sample": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "",
                        "example": "Channel Settings"
                      },
                      "help": {
                        "type": "string",
                        "description": "",
                        "example": "help"
                      },
                      "settings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "order_status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "",
                                  "example": "order_status"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name for reference",
                                  "example": "Status to fetch"
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": "",
                                  "example": "processing, on-hold etc"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "",
                                  "example": "text"
                                }
                              },
                              "description": ""
                            }
                          }
                        },
                        "description": ""
                      }
                    },
                    "description": ""
                  },
                  "auth_sample": {
                    "type": "object",
                    "properties": {
                      "api_info": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "",
                            "example": "Manual"
                          },
                          "help": {
                            "type": "string",
                            "description": "",
                            "example": "Provide credentials to integrate the channel"
                          },
                          "settings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": ""
                                },
                                "name": {
                                  "type": "string",
                                  "description": ""
                                },
                                "placeholder": {
                                  "type": "string",
                                  "description": ""
                                }
                              },
                              "example": [
                                {
                                  "code": "store_url",
                                  "name": "Store Url",
                                  "placeholder": "e.g. https://abc/example.com"
                                },
                                {
                                  "code": "api_username",
                                  "name": "API Username",
                                  "placeholder": "a1b2c3d4"
                                },
                                {
                                  "code": "api_key",
                                  "name": "api key",
                                  "placeholder": "abcd1234"
                                }
                              ]
                            }
                          }
                        },
                        "description": ""
                      }
                    },
                    "description": "The various keys required for the channel integration"
                  },
                  "description": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "description": ""
              }
            }
          }
        }
      }
    },
    "404Error": {
      "title": "404 not found",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "404 not found"
        },
        "status_code": {
          "type": "integer",
          "example": 404
        }
      }
    },
    "productImportResponse": {
      "title": "import success",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 12
        }
      }
    },
    "import403": {
      "title": "incorrect format",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "403 bad request"
        },
        "status_code": {
          "type": "integer",
          "example": 403
        }
      }
    },
    "GetZonesResponse": {
      "title": "Get zones response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 200
        },
        "data": {
          "type": "object",
          "example": [
            {
              "id": 1,
              "country_id": 1,
              "code": "BDS",
              "name": "Badakhshan",
              "status": 1
            },
            {
              "id": 2,
              "country_id": 1,
              "code": "BDG",
              "name": "Badghis",
              "status": 1
            },
            {
              "id": 3,
              "country_id": 1,
              "code": "BGL",
              "name": "Baghlan",
              "status": 1
            },
            {
              "id": 4,
              "country_id": 1,
              "code": "BAL",
              "name": "Balkh",
              "status": 1
            },
            {
              "id": 5,
              "country_id": 1,
              "code": "BAM",
              "name": "Bamian",
              "status": 1
            },
            {
              "id": 6,
              "country_id": 1,
              "code": "FRA",
              "name": "Farah",
              "status": 1
            },
            {
              "id": 7,
              "country_id": 1,
              "code": "FYB",
              "name": "Faryab",
              "status": 1
            },
            {
              "id": 8,
              "country_id": 1,
              "code": "GHA",
              "name": "Ghazni",
              "status": 1
            },
            {
              "id": 9,
              "country_id": 1,
              "code": "GHO",
              "name": "Ghowr",
              "status": 1
            },
            {
              "id": 10,
              "country_id": 1,
              "code": "HEL",
              "name": "Helmand",
              "status": 1
            },
            {
              "id": 11,
              "country_id": 1,
              "code": "HER",
              "name": "Herat",
              "status": 1
            },
            {
              "id": 12,
              "country_id": 1,
              "code": "JOW",
              "name": "Jowzjan",
              "status": 1
            },
            {
              "id": 13,
              "country_id": 1,
              "code": "KAB",
              "name": "Kabul",
              "status": 1
            },
            {
              "id": 14,
              "country_id": 1,
              "code": "KAN",
              "name": "Kandahar",
              "status": 1
            },
            {
              "id": 15,
              "country_id": 1,
              "code": "KAP",
              "name": "Kapisa",
              "status": 1
            },
            {
              "id": 16,
              "country_id": 1,
              "code": "KHO",
              "name": "Khost",
              "status": 1
            },
            {
              "id": 17,
              "country_id": 1,
              "code": "KNR",
              "name": "Konar",
              "status": 1
            },
            {
              "id": 18,
              "country_id": 1,
              "code": "KDZ",
              "name": "Kondoz",
              "status": 1
            },
            {
              "id": 19,
              "country_id": 1,
              "code": "LAG",
              "name": "Laghman",
              "status": 1
            },
            {
              "id": 20,
              "country_id": 1,
              "code": "LOW",
              "name": "Lowgar",
              "status": 1
            },
            {
              "id": 21,
              "country_id": 1,
              "code": "NAN",
              "name": "Nangrahar",
              "status": 1
            },
            {
              "id": 22,
              "country_id": 1,
              "code": "NIM",
              "name": "Nimruz",
              "status": 1
            },
            {
              "id": 23,
              "country_id": 1,
              "code": "NUR",
              "name": "Nurestan",
              "status": 1
            },
            {
              "id": 24,
              "country_id": 1,
              "code": "ORU",
              "name": "Oruzgan",
              "status": 1
            },
            {
              "id": 25,
              "country_id": 1,
              "code": "PIA",
              "name": "Paktia",
              "status": 1
            },
            {
              "id": 26,
              "country_id": 1,
              "code": "PKA",
              "name": "Paktika",
              "status": 1
            },
            {
              "id": 27,
              "country_id": 1,
              "code": "PAR",
              "name": "Parwan",
              "status": 1
            },
            {
              "id": 28,
              "country_id": 1,
              "code": "SAM",
              "name": "Samangan",
              "status": 1
            },
            {
              "id": 29,
              "country_id": 1,
              "code": "SAR",
              "name": "Sar-e Pol",
              "status": 1
            },
            {
              "id": 30,
              "country_id": 1,
              "code": "TAK",
              "name": "Takhar",
              "status": 1
            }
          ]
        }
      },
      "required": [
        "status",
        "data"
      ]
    },
    "401Error": {
      "title": "Invalid token",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Token Signature could not be verified."
        },
        "status_code": {
          "type": "integer",
          "example": 401
        }
      }
    },
    "GetProductsResponse": {
      "title": "Get products response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "sku": {
                "type": "string"
              },
              "hsn": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "category_code": {
                "type": "string"
              },
              "category_name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "cost_price": {
                "type": "string"
              },
              "mrp": {
                "type": "string"
              },
              "tax_code": {
                "type": "string"
              },
              "low_stock": {
                "type": "integer"
              },
              "ean": {
                "type": "string"
              },
              "upc": {
                "type": "string"
              },
              "isbn": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "color": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "dimensions": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "example": [
            {
              "id": 319134,
              "sku": "inactive",
              "hsn": "",
              "name": "inactive",
              "description": "",
              "category_code": "default",
              "category_name": "Default Category",
              "category_tax_code": "default",
              "image": "",
              "weight": "0.5 kg",
              "size": "",
              "cost_price": "0.00",
              "mrp": "0.00",
              "tax_code": "default",
              "low_stock": 0,
              "ean": "",
              "upc": "",
              "isbn": "",
              "created_at": "23 Jun 2017 02:17 PM",
              "updated_at": "23 Jun 2017 02:17 PM",
              "quantity": 11,
              "color": "",
              "brand": "",
              "dimensions": "10 x 10 x 10 cm",
              "status": "INACTIVE",
              "type": "Single"
            },
            {
              "id": 318862,
              "sku": "sanity",
              "hsn": "",
              "name": "sanity",
              "description": "",
              "category_code": "new",
              "category_name": "new",
              "category_tax_code": "5",
              "image": "",
              "weight": "0.5 kg",
              "size": "",
              "cost_price": "0.00",
              "mrp": "0.00",
              "tax_code": "5",
              "low_stock": 0,
              "ean": "",
              "upc": "",
              "isbn": "",
              "created_at": "23 Jun 2017 01:13 PM",
              "updated_at": "23 Jun 2017 01:13 PM",
              "quantity": 8,
              "color": "",
              "brand": "",
              "dimensions": "10 x 10 x 10 cm",
              "status": "ACTIVE",
              "type": "Single"
            }
          ]
        },
        "meta": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                },
                "per_page": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "total": 7,
                "count": 7,
                "per_page": 15,
                "current_page": 1,
                "total_pages": 1,
                "links": []
              }
            }
          }
        }
      },
      "required": [
        "data",
        "meta"
      ]
    },
    "addProduct422": {
      "title": "unprocessable data",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "There were errors in adding new product!"
        },
        "errors": {
          "type": "object",
          "properties": {
            "name": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "The name field is required."
            },
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "The type field is required."
            },
            "sku": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "The sku field is required."
            }
          }
        },
        "status_code": {
          "type": "integer",
          "example": 422
        }
      }
    },
    "AddRequest": {
      "title": "Add request",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)",
          "example": "Toys"
        },
        "HSN": {
          "type": "string",
          "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under",
          "example": "1234cdhc"
        },
        "name": {
          "type": "string",
          "description": "Name of the product",
          "example": "SuperMan"
        },
        "tax_code": {
          "type": "string",
          "description": "The percentage of tax which is to be imposed",
          "example": "default"
        },
        "type": {
          "type": "string",
          "description": "If there is only one product or multiple types of products",
          "example": "Single"
        },
        "qty": {
          "type": "integer",
          "description": "Total Quantity of the products to be shipped",
          "example": 10
        },
        "low_stock": {
          "type": "string",
          "description": "Specifies when the low stock notification should come on",
          "example": ""
        },
        "category_code": {
          "type": "string",
          "description": "You can add a category code to your ShipRocket account from “add category”",
          "example": "default"
        },
        "description": {
          "type": "string",
          "description": "Gives a description of the product",
          "example": ""
        },
        "brand": {
          "type": "string",
          "description": "The product brand name",
          "example": ""
        },
        "size": {
          "type": "integer",
          "description": "",
          "example": ""
        },
        "weight": {
          "type": "integer",
          "description": "Total weight of the products",
          "example": ""
        },
        "length": {
          "type": "integer",
          "description": "Product Dimensions",
          "example": ""
        },
        "width": {
          "type": "integer",
          "description": "Product Dimensions",
          "example": ""
        },
        "height": {
          "type": "integer",
          "description": "Product Dimensions",
          "example": ""
        },
        "ean": {
          "type": "string",
          "description": "European Article Number - A barcode for product identification (which helps manufacturers identify how many products have been sold once a sale is made) It is 13 digits long and required for international selling",
          "example": ""
        },
        "upc": {
          "type": "string",
          "description": "Universal Product Code – Barcode for product identification which is used across the world. It is 12 digits long ",
          "example": ""
        },
        "isbn": {
          "type": "string",
          "description": "International Standard Book Number – Identification barcode for books, magazines, e-books and other published media. It is 10 digits long",
          "example": ""
        },
        "color": {
          "type": "string",
          "description": "The colour of the product",
          "example": ""
        },
        "imei_serialnumber": {
          "type": "string",
          "description": "The International Mobile Equipment Identity Number, which is used by  a network to identify valid devices. Eg if two iphones have to be shipped they will have 2 Imei’s",
          "example": ""
        },
        "cost_price": {
          "type": "integer",
          "description": "How much it cost to make the product",
          "example": ""
        },
        "mrp": {
          "type": "string",
          "description": "Maximum Retail Price. How much is the maximum price which the product can be sold at",
          "example": ""
        },
        "status": {
          "type": "integer",
          "description": "In Boolean, if the product details have been successfully or unsuccessfully added",
          "format": "int32",
          "example": 1
        },
        "image_url": {
          "type": "string",
          "description": "Shows the url of the product images which have been uploaded",
          "example": ""
        },
        "components": {
          "type": "array",
          "description": "An arrayed display of all the components",
          "items": {
            "type": "string",
            "example": []
          }
        }
      },
      "required": [
        "sku",
        "name",
        "tax_code",
        "type",
        "qty",
        "low_stock",
        "category_code",
        "description",
        "brand",
        "size",
        "weight",
        "length",
        "width",
        "height",
        "ean",
        "upc",
        "isbn",
        "color",
        "imei_serialnumber",
        "cost_price",
        "mrp",
        "status",
        "image_url",
        "components"
      ]
    },
    "ShowResponse": {
      "title": "Show response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "sku": {
              "type": "string"
            },
            "hsn": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "category_code": {
              "type": "string"
            },
            "category_name": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "weight": {
              "type": "string"
            },
            "size": {
              "type": "string"
            },
            "cost_price": {
              "type": "string"
            },
            "mrp": {
              "type": "string"
            },
            "tax_code": {
              "type": "string"
            },
            "low_stock": {
              "type": "integer"
            },
            "ean": {
              "type": "string"
            },
            "upc": {
              "type": "string"
            },
            "isbn": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "quantity": {
              "type": "integer"
            },
            "color": {
              "type": "string"
            },
            "brand": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "show400": {
      "title": "invalid product id",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "This product is either inactive or does not exist"
        },
        "status_code": {
          "type": "integer",
          "example": 400
        }
      }
    },
    "GetAllResponse": {
      "title": "Get all response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "price": {
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "sku": {
                "type": "string"
              },
              "channel_sku": {
                "type": "string"
              },
              "channel_id": {
                "type": "integer"
              },
              "channel_name": {
                "type": "string"
              },
              "base_channel_code": {
                "type": "string"
              },
              "channel_product_id": {
                "type": "string"
              },
              "inventory": {
                "type": "integer"
              },
              "synced_on": {
                "type": "string"
              }
            }
          },
          "example": [
            {
              "id": 416474,
              "title": "product2",
              "image": "",
              "price": "500.00",
              "quantity": -4,
              "sku": "shopify",
              "channel_sku": "product2",
              "channel_id": 23423,
              "channel_name": "SHOPIFY",
              "base_channel_code": "SH",
              "channel_product_id": "10808202516",
              "inventory": 18,
              "synced_on": "8 Jun 2017 01:15 PM"
            },
            {
              "id": 416475,
              "title": "product",
              "image": "",
              "price": "400.00",
              "quantity": -1,
              "sku": "Iphone5s",
              "channel_sku": "product",
              "channel_id": 23423,
              "channel_name": "SHOPIFY",
              "base_channel_code": "SH",
              "channel_product_id": "10807289684",
              "inventory": 0,
              "synced_on": "5 Jun 2017 03:27 PM"
            }
          ]
        },
        "meta": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                },
                "per_page": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "total": 7,
                "count": 7,
                "per_page": 15,
                "current_page": 1,
                "total_pages": 1,
                "links": []
              }
            }
          }
        }
      },
      "required": [
        "data",
        "meta"
      ]
    },
    "MapRequest": {
      "title": "Map request",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32",
          "description": "The item in the Master Catalogue"
        },
        "listing_id": {
          "type": "integer",
          "format": "int32",
          "description": "The item in the Channel Catalogue"
        },
        "ID": {
          "type": "integer",
          "description": "Same id as placed in their respective GET codes"
        }
      },
      "required": [
        "product_id",
        "listing_id"
      ]
    },
    "GetOrdersResponse": {
      "title": "Get All Orders Response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 123
              },
              "channel_id": {
                "type": "integer",
                "example": 456
              },
              "channel_name": {
                "type": "string",
                "example": "My Channel"
              },
              "base_channel_code": {
                "type": "string",
                "example": "MC"
              },
              "channel_order_id": {
                "type": "string",
                "example": "Test1504508157347"
              },
              "customer_name": {
                "type": "string",
                "example": "first last"
              },
              "customer_email": {
                "type": "string",
                "example": "test@gmail.com"
              },
              "customer_phone": {
                "type": "string",
                "example": "9876543210"
              },
              "payment_status": {
                "type": "string",
                "example": "Pending"
              },
              "total": {
                "type": "string",
                "example": "100.00"
              },
              "tax": {
                "type": "string",
                "example": "0.00"
              },
              "sla": {
                "type": "string",
                "example": "2 days"
              },
              "shipping_method": {
                "type": "string",
                "example": "SR"
              },
              "expedited": {
                "type": "string",
                "example": "0"
              },
              "status": {
                "type": "string",
                "example": "NEW"
              },
              "status_code": {
                "type": "integer",
                "example": 1
              },
              "payment_method": {
                "type": "string",
                "example": "Prepaid"
              },
              "is_international": {
                "type": "integer",
                "example": 0
              },
              "purpose_of_shipment": {
                "type": "integer",
                "example": 0
              },
              "channel_created_at": {
                "type": "string",
                "example": "4 Sep 2017, 12:26 PM"
              },
              "created_at": {
                "type": "string",
                "example": "4 Sep 2017, 12:26 PM"
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123
                    },
                    "channel_order_product_id": {
                      "type": "integer",
                      "example": 456
                    },
                    "name": {
                      "type": "string",
                      "example": "test product"
                    },
                    "channel_sku": {
                      "type": "string",
                      "example": "ABCD1234"
                    },
                    "quantity": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "available": {
                      "type": "string",
                      "example": "0"
                    },
                    "status": {
                      "type": "string",
                      "example": "UNDEFINED"
                    },
                    "hsn": {
                      "type": "string",
                      "example": "54673478"
                    }
                  }
                }
              },
              "shipments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123
                    },
                    "isd_code": {
                      "type": "string",
                      "example": "+91"
                    },
                    "courier": {
                      "type": "string",
                      "example": "FedEx"
                    },
                    "weight": {
                      "type": "string",
                      "example": "0.5"
                    },
                    "dimensions": {
                      "type": "string",
                      "example": "10x10x10"
                    },
                    "awb": {
                      "type": "string",
                      "example": "123"
                    },
                    "return_awb": {
                      "type": "string",
                      "example": "321"
                    },
                    "volumetric_weight": {
                      "type": "string",
                      "example": "0.5"
                    }
                  }
                }
              },
              "activities": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": ["ORDER_CREATED", "LABEL_GENERATED"]
                }
              }
            }
          }
        }
      }
    },
    "GetOrderResponse": {
      "title": "Get order response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 123
            },
            "channel_id": {
              "type": "integer",
              "example": 456
            },
            "channel_name": {
              "type": "string",
              "example": "My Channel"
            },
            "base_channel_code": {
              "type": "string",
              "example": "MC"
            },
            "channel_order_id": {
              "type": "string",
              "example": "Test1504508157347"
            },
            "customer_name": {
              "type": "string",
              "example": "first last"
            },
            "customer_email": {
              "type": "string",
              "example": "test@gmail.com"
            },
            "customer_phone": {
              "type": "string",
              "example": "9876543210"
            },
            "payment_status": {
              "type": "string",
              "example": "Pending"
            },
            "total": {
              "type": "string",
              "example": "100.00"
            },
            "tax": {
              "type": "string",
              "example": "0.00"
            },
            "sla": {
              "type": "string",
              "example": "2 days"
            },
            "shipping_method": {
              "type": "string",
              "example": "SR"
            },
            "expedited": {
              "type": "string",
              "example": "0"
            },
            "status": {
              "type": "string",
              "example": "NEW"
            },
            "status_code": {
              "type": "integer",
              "example": 1
            },
            "payment_method": {
              "type": "string",
              "example": "Prepaid"
            },
            "is_international": {
              "type": "integer",
              "example": 0
            },
            "purpose_of_shipment": {
              "type": "integer",
              "example": 0
            },
            "channel_created_at": {
              "type": "string",
              "example": "4 Sep 2017, 12:26 PM"
            },
            "created_at": {
              "type": "string",
              "example": "4 Sep 2017, 12:26 PM"
            },
            "products": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 123
                  },
                  "channel_order_product_id": {
                    "type": "integer",
                    "example": 456
                  },
                  "name": {
                    "type": "string",
                    "example": "test product"
                  },
                  "channel_sku": {
                    "type": "string",
                    "example": "ABCD1234"
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 1
                  },
                  "product_id": {
                    "type": "integer",
                    "example": 123
                  },
                  "available": {
                    "type": "string",
                    "example": "0"
                  },
                  "status": {
                    "type": "string",
                    "example": "UNDEFINED"
                  },
                  "hsn": {
                    "type": "string",
                    "example": "54673478"
                  }
                }
              }
            },
            "shipments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 123
                  },
                  "isd_code": {
                    "type": "string",
                    "example": "+91"
                  },
                  "courier": {
                    "type": "string",
                    "example": "FedEx"
                  },
                  "weight": {
                    "type": "string",
                    "example": "0.5"
                  },
                  "dimensions": {
                    "type": "string",
                    "example": "10x10x10"
                  },
                  "awb": {
                    "type": "string",
                    "example": "123"
                  },
                  "return_awb": {
                    "type": "string",
                    "example": "321"
                  },
                  "volumetric_weight": {
                    "type": "string",
                    "example": "0.5"
                  }
                }
              }
            },
            "activities": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "ORDER_CREATED"
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 123
                },
                "count": {
                  "type": "integer",
                  "example": 1
                },
                "per_page": {
                  "type": "integer",
                  "example": 12
                },
                "current_page": {
                  "type": "integer",
                  "example": 1
                },
                "total_pages": {
                  "type": "integer",
                  "example": 32
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "next": {
                      "type": "string",
                      "example": "https://krmct001.kartrocket.com/v1/external/orders?page=2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "CancelOrdersRequest": {
      "title": "Cancel orders request",
      "type": "object",
      "description": "Mentions the ids of the orders which are to be cancelled. If there are multiple orders then you can cancel them by just entering them in multiple lines",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "CancelOrdersResponse": {
      "title": "Order Cancel request",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Your request to cancel order id order6 has been taken. Since the AWB has already been assigned,  the freight amount against that order is blocked and it will be added back automatically in to your balance in 3-4 working days after the verification by the concerned team."
        }
      }
    },
    "FulfillmentRequest": {
      "title": "Fulfillment request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "integer",
                "example": 123
              },
              "order_product_id": {
                "type": "integer",
                "example": 321
              },
              "quantity": {
                "type": "string",
                "example": "1"
              },
              "action": {
                "type": "string",
                "example": "add"
              }
            }
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "FulfillmentResponse": {
      "title": "Fulfillment response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "integer",
              "example": 123
            },
            "order_product_id": {
              "type": "integer",
              "example": 321
            },
            "quantity": {
              "type": "string",
              "example": "1"
            },
            "action": {
              "type": "string",
              "example": "add"
            }
          }
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "data",
        "success",
        "message"
      ]
    },
    "MappingRequest": {
      "title": "Mapping request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "integer",
                "example": 123
              },
              "order_product_id": {
                "type": "integer",
                "example": 321
              },
              "master_sku": {
                "type": "string",
                "example": "H3HEDE"
              }
            }
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "MappingResponse": {
      "title": "Mapping response",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "integer",
                "example": 123
              },
              "order_product_id": {
                "type": "integer",
                "example": 321
              },
              "master_sku": {
                "type": "string",
                "example": "H3HEDE"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "No product found matching this master sku"
          },
          "success": {
            "type": "boolean",
            "example": false
          }
        }
      }
    },
    "GenerateInvoiceRequest": {
      "title": "Generate invoice request",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "description": "Mentions the ids of the orders which are to be invoiced. If there are multiple orders then you can cancel them by just entering them in multiple lines",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "GenerateInvoiceResponse": {
      "title": "Generate invoice response",
      "type": "object",
      "properties": {
        "is_invoice_created": {
          "type": "boolean",
          "description": "Mentions the response to if the invoice is created by the system or not"
        },
        "invoice_url": {
          "type": "string",
          "description": "If the answer to the aforementioned question is true, then it displays the url of a pdf file with the order invoice"
        },
        "not_created": {
          "type": "array",
          "description": "If the invoice is not created then it shows this fact",
          "items": {
            "type": "string",
            "example": ""
          }
        }
      },
      "required": [
        "is_invoice_created",
        "invoice_url",
        "not_created"
      ]
    },
    "ChangeAddressRequest": {
      "title": "Shows the address which needs to be updated",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "integer",
          "format": "int32",
          "description": "Order of the customer whose address details need to be changed"
        },
        "shipping_customer_name": {
          "type": "string",
          "description": "The name of the customer whose details need to be changed"
        },
        "shipping_phone": {
          "type": "string",
          "description": "The customer’s phone number"
        },
        "shipping_address": {
          "type": "string",
          "description": "1st line of the address"
        },
        "shipping_address_2": {
          "type": "string",
          "description": "2nd line of the address"
        },
        "shipping_city": {
          "type": "string",
          "description": "The city where it is to be shipped"
        },
        "shipping_state": {
          "type": "string",
          "description": "The state where it is to be shipped"
        },
        "shipping_country": {
          "type": "string",
          "description": "The country where it is to be shipped"
        },
        "shipping_pincode": {
          "type": "integer",
          "description": "The pincode of the customer",
          "format": "int32"
        }
      },
      "required": [
        "order_id",
        "shipping_customer_name",
        "shipping_phone",
        "shipping_address",
        "shipping_address_2",
        "shipping_city",
        "shipping_state",
        "shipping_country",
        "shipping_pincode"
      ]
    },
    "GetManifestsRequest": {
      "title": "Get manifests request",
      "type": "object",
      "properties": {
        "order_ids": {
          "type": "array",
          "description": "Mentions the ids of the orders whose manifest is to be printed",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "order_ids"
      ]
    },
    "GetManifestsResponse": {
      "title": "Get manifests response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/manifest/MAN-00212.pdf"
          },
          "description": "Displays the url of a pdf file with the manifest"
        }
      },
      "required": [
        "data"
      ]
    },
    "generateManifestRequest": {
      "title": "Generate Manifests Request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "id(s) of shipment(s)",
            "example": 123
          }
        }
      },
      "required": [
        "shipment_id"
      ]
    },
    "generateManifestResponse": {
      "title": "Generate Manifests Response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 200
        },
        "manifest_url": {
          "type": "string",
          "example": "http://example.com/manifests/manifests.csv"
        }
      },
      "required": [
        "status",
        "manifest_url"
      ]
    },
    "CreateLinkedOrderRequest": {
      "title": "Create linked order. request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "Creates the order id"
        },
        "order_date": {
          "type": "string",
          "description": "Mentions the date and time when the order was created"
        },
        "channel_id": {
          "type": "integer",
          "format": "int32",
          "description": "The id of the channel where the order is placed"
        },
        "billing_customer_name": {
          "type": "string",
          "description": "The customer’s name"
        },
        "billing_last_name": {
          "type": "string",
          "description": "The customer’s last name"
        },
        "billing_address": {
          "type": "string",
          "description": "The first two address lines of the customer"
        },
        "billing_address_2": {
          "type": "string",
          "description": ""
        },
        "billing_city": {
          "type": "string",
          "description": "Geographical details of the customer’s adress"
        },
        "billing_state": {
          "type": "string",
          "description": ""
        },
        "billing_country": {
          "type": "string",
          "description": ""
        },
        "billing_pincode": {
          "type": "string",
          "description": "Customer’s pincode"
        },
        "billing_email": {
          "type": "string",
          "description": "Customer’s email id"
        },
        "billing_phone": {
          "type": "string",
          "description": "Customer’s phone numberThe name of the person to whom the package is being shipped"
        },
        "shipping_is_billing": {
          "type": "integer",
          "format": "int32",
          "description": ""
        },
        "shipping_customer_name": {
          "type": "string",
          "description": "The name of the person to whom the package is being shipped"
        },
        "shipping_last_name": {
          "type": "string",
          "description": ""
        },
        "shipping_address": {
          "type": "string",
          "description": "Address of the person to whom the package is being shipped to"
        },
        "shipping_address_2": {
          "type": "string",
          "description": ""
        },
        "shipping_city": {
          "type": "string",
          "description": ""
        },
        "shipping_country": {
          "type": "string",
          "description": ""
        },
        "shipping_pincode": {
          "type": "string",
          "description": ""
        },
        "shipping_state": {
          "type": "string",
          "description": ""
        },
        "shipping_email": {
          "type": "string",
          "description": "Email id of the person whom the package is being shipped to"
        },
        "shipping_phone": {
          "type": "string",
          "description": "Phone number of the person whom the package is being shipped to"
        },
        "order_items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)"
              },
              "units": {
                "type": "integer",
                "description": "Total number of units being shipped"
              },
              "selling_price": {
                "type": "integer",
                "description": "Price at which it is being sold"
              },
              "discount": {
                "type": "integer",
                "description": ""
              },
              "HSN": {
                "type": "string",
                "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under"
              }
            }
          }
        },
        "payment_method": {
          "type": "string",
          "description": "Specifies the payment method"
        },
        "shipping_charges": {
          "type": "string",
          "description": "Mentions the shipping charges"
        },
        "giftwrap_charges": {
          "type": "string",
          "description": "Mentions the charges for giftwrapping"
        },
        "transaction_charges": {
          "type": "string",
          "description": "Mentions the charges for the total transaction"
        },
        "total_discount": {
          "type": "string",
          "description": "Mentions the total discount offered"
        },
        "sub_total": {
          "type": "integer",
          "format": "int32",
          "description": "Mentions the total after these deductions"
        },
        "length": {
          "type": "integer",
          "description": "Mentions the product dimensions"
        },
        "breadth": {
          "type": "integer",
          "description": ""
        },
        "height": {
          "type": "integer",
          "description": ""
        },
        "weight": {
          "type": "integer",
          "description": ""
        }
      },
      "required": [
        "order_id",
        "order_date",
        "channel_id",
        "billing_customer_name",
        "billing_last_name",
        "billing_address",
        "billing_address_2",
        "billing_city",
        "billing_state",
        "billing_country",
        "billing_pincode",
        "billing_email",
        "billing_phone",
        "shipping_is_billing",
        "shipping_customer_name",
        "shipping_last_name",
        "shipping_address",
        "shipping_address_2",
        "shipping_city",
        "shipping_country",
        "shipping_pincode",
        "shipping_state",
        "shipping_email",
        "shipping_phone",
        "order_items",
        "payment_method",
        "shipping_charges",
        "giftwrap_charges",
        "transaction_charges",
        "total_discount",
        "sub_total"
      ]
    },
    "CreateLinkedOrderResponse": {
      "title": "Create linked order. response",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "example": "12345"
        },
        "status_code": {
          "type": "string",
          "example": "1"
        },
        "shipment_id": {
          "type": "string",
          "example": "1234"
        },
        "status": {
          "type": "string",
          "example": "NEW"
        }
      }
    },
    "CreateQuickOrderRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "required|max:20",
          "example": "Test order 1"
        },
        "order_date": {
          "type": "string",
          "description": "required",
          "example": "2018-05-08 12:23"
        },
        "pickup_location": {
          "type": "string",
          "description": "",
          "example": "Location 1"
        },
        "channel_id": {
          "type": "integer",
          "description": "",
          "example": "12"
        },
        "billing_customer_name": {
          "type": "string",
          "description": "required",
          "example": "John"
        },
        "billing_last_name": {
          "type": "string",
          "description": "",
          "example": "Doe"
        },
        "billing_address": {
          "type": "string",
          "description": "required|min:3",
          "example": "#12, street 1"
        },
        "billing_address_2": {
          "type": "string",
          "description": "max:50",
          "example": "Near Post office, Nehru Place"
        },
        "billing_city": {
          "type": "string",
          "description": "required|max:30",
          "example": "New Delhi"
        },
        "billing_pincode": {
          "type": "integer",
          "description": "",
          "example": "110002"
        },
        "billing_state": {
          "type": "string",
          "description": "required",
          "example": "Delhi"
        },
        "billing_country": {
          "type": "string",
          "description": "required",
          "example": "India"
        },
        "billing_email": {
          "type": "string",
          "description": "required",
          "example": "john@doe.com"
        },
        "billing_phone": {
          "type": "integer",
          "description": "mobile number",
          "example": "9876543210"
        },
        "shipping_is_billing": {
          "type": "boolean",
          "description": "required",
          "example": true
        },
        "shipping_customer_name": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_last_name": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_address": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_address_2": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_city": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_pincode": {
          "type": "integer",
          "description": "",
          "example": ""
        },
        "shipping_country": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_state": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_email": {
          "type": "string",
          "description": "",
          "example": ""
        },
        "shipping_phone": {
          "type": "integer",
          "description": "",
          "example": ""
        },
        "order_items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "required",
                "example": "Test Product 1"
              },
              "sku": {
                "type": "string",
                "description": "required",
                "example": "abc123"
              },
              "units": {
                "type": "integer",
                "description": "required",
                "example": 20
              },
              "selling_price": {
                "type": "integer",
                "description": "required",
                "example": "200"
              },
              "discount": {
                "type": "integer",
                "description": "",
                "example": ""
              },
              "tax": {
                "type": "integer",
                "description": "",
                "example": ""
              },
              "hsn": {
                "type": "integer",
                "description": "Harmonised System Nomenclature. A code number used to classify goods for taxation purposes. Done to determine which category of taxes do the goods come under",
                "example": 123445
              }
            }
          }
        },
        "payment_method": {
          "type": "string",
          "description": "required",
          "example": "Prepaid/COD"
        },
        "shipping_charges": {
          "type": "integer",
          "description": "",
          "example": 0
        },
        "giftwrap_charges": {
          "type": "integer",
          "description": "",
          "example": 0
        },
        "transaction_charges": {
          "type": "integer",
          "description": "",
          "example": 0
        },
        "total_discount": {
          "type": "integer",
          "description": "",
          "example": 0
        },
        "sub_total": {
          "type": "integer",
          "description": "",
          "example": 4000
        },
        "length": {
          "type": "integer",
          "description": "",
          "example": 18
        },
        "breadth": {
          "type": "integer",
          "description": "",
          "example": 18
        },
        "height": {
          "type": "integer",
          "description": "",
          "example": 40
        },
        "weight": {
          "type": "integer",
          "description": "",
          "example": 2.4
        }
      }
    },
    "CreateQuickOrderResponse": {
      "title": "Create quick order response",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "integer",
          "example": 123
        },
        "shipment_id": {
          "type": "integer",
          "example": 546
        },
        "status": {
          "type": "string",
          "example": "NEW"
        },
        "status_code": {
          "type": "integer",
          "example": 1
        },
        "onboarding_completed_now": {
          "type": "integer",
          "example": 0
        }
      },
      "required": [
        "status",
        "status_code"
      ]
    },
    "DetailsResponse": {
      "title": "Details response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": [
        "data"
      ]
    },
    "GetInventoriesResponse": {
      "title": "Get inventories response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The product id"
              },
              "sku": {
                "type": "string",
                "description": "Stock Keeping Unit or the identification unit of an individual product (generally alphanumeric)"
              },
              "category_name": {
                "type": "string",
                "description": "If the product comes under a certain specified category or not. If not, then it will be named as default"
              },
              "is_combo": {
                "type": "integer",
                "description": ""
              },
              "name": {
                "type": "string",
                "description": "Product name"
              },
              "type": {
                "type": "string",
                "description": "Mention of the type of product"
              },
              "color": {
                "type": "string",
                "description": "Mentions the product color"
              },
              "brand": {
                "type": "string",
                "description": "Mentions the brand of the product."
              },
              "total_quantity": {
                "type": "integer",
                "description": "Shows the total number of pieces of the product as listed"
              },
              "available_quantity": {
                "type": "integer",
                "description": "Shows the quantity which can be shipped"
              },
              "blocked_quantity": {
                "type": "integer",
                "description": "Shows the number of product pieces which cannot be shipped"
              },
              "updated_on": {
                "type": "string",
                "description": "Displays the time of inventory updation"
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Shows the total number of products whose inventories were checked in the paginated page"
                },
                "count": {
                  "type": "integer",
                  "description": "Show the results for that paginated page"
                },
                "per_page": {
                  "type": "integer",
                  "description": "Shows the number of products which are listd per page"
                },
                "current_page": {
                  "type": "integer",
                  "description": "Shows the current page of the total number of pages"
                },
                "total_pages": {
                  "type": "integer",
                  "description": "Shows the total number of pages"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Lists the links to the inventories"
                }
              }
            }
          }
        }
      },
      "required": [
        "data",
        "meta"
      ]
    },
    "UpdateInventoryResponse": {
      "title": "Update inventory response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "available_quantity": {
              "type": "integer",
              "description": "Shows the quantity which can be shipped"
            },
            "blocked_quantity": {
              "type": "integer",
              "description": "Shows the number of product pieces which cannot be shipped"
            },
            "total_quantity": {
              "type": "integer",
              "description": "Shows the total number of pieces of the product as listed"
            }
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "CheckServiceabilityError": {
      "title": "PINCODE is not serviceable",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Postcode is not secviceable by SHIPROCKET"
        },
        "status_code": {
          "type": "string",
          "description": "HTTP status of request"
        }
      }
    },
    "CheckServiceabilityResponse": {
      "title": "Check serviceability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": "200"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "available_courier_companies": {
                "type": "object",
                "properties": {
                  "air": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cod": {
                          "type": "integer",
                          "example": 1
                        },
                        "courier_name": {
                          "type": "string",
                          "example": "DOTZOT"
                        },
                        "estimated_delivery_days": {
                          "type": "integer",
                          "example": 2.07
                        },
                        "rate": {
                          "type": "integer",
                          "example": 109
                        }
                      }
                    }
                  },
                  "surface": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cod": {
                          "type": "integer",
                          "example": 1
                        },
                        "courier_name": {
                          "type": "string",
                          "example": "DOTZOT"
                        },
                        "estimated_delivery_days": {
                          "type": "integer",
                          "example": 2.07
                        },
                        "rate": {
                          "type": "integer",
                          "example": 109
                        }
                      }
                    }
                  },
                  "zone": {
                    "type": "string",
                    "example": "z_a"
                  }
                }
              },
              "delivery": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "New Delhi"
                  },
                  "postcode": {
                    "type": "integer",
                    "example": 110030
                  },
                  "state": {
                    "type": "string",
                    "example": "DELHI"
                  }
                }
              },
              "pickup": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "New Delhi"
                  },
                  "postcode": {
                    "type": "integer",
                    "example": 110062
                  },
                  "state": {
                    "type": "string",
                    "example": "DELHI"
                  }
                }
              },
              "rates": {
                "type": "object",
                "properties": {
                  "Lite": {
                    "type": "object",
                    "properties": {
                      "air": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      },
                      "surface": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Basic": {
                    "type": "object",
                    "properties": {
                      "air": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      },
                      "surface": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Advanced": {
                    "type": "object",
                    "properties": {
                      "air": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      },
                      "surface": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Pro": {
                    "type": "object",
                    "properties": {
                      "air": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      },
                      "surface": {
                        "type": "object",
                        "properties": {
                          "cod_charges": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 57.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 35.00
                              }
                            }
                          },
                          "zone_a": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 28.00
                              }
                            }
                          },
                          "zone_b": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 48.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 40.00
                              }
                            }
                          },
                          "zone_c": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 64.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 47.00
                              }
                            }
                          },
                          "zone_d": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 74.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          },
                          "zone_e": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer",
                                "example": 90.00
                              },
                              "min": {
                                "type": "integer",
                                "example": 48.00
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "status",
        "data"
      ]
    },
    "AwbCreationRequest": {
      "title": "Awb creation request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "description": "The shipment id as generated in the shipment section"
          }
        },
        "courier_id": {
          "type": "integer",
          "format": "int32",
          "description": "The courier id from above"
        }
      },
      "required": [
        "shipment_id"
      ]
    },
    "AwbCreationResponse": {
      "title": "Awb creation response",
      "type": "object",
      "properties": {
        "awb_assign_status": {
          "type": "integer",
          "format": "int32",
          "description": "It will be 1, implying that the status has been assigned"
        },
        "response": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "courier_company_id": {
                  "type": "integer",
                  "description": "id of the courier company"
                },
                "awb_code": {
                  "type": "string",
                  "description": "The AWB code generated"
                },
                "cod": {
                  "type": "integer",
                  "description": "If there is COD then response =1, else it will be 0"
                },
                "order_id": {
                  "type": "integer",
                  "description": "Order id as generated earlier"
                },
                "shipment_id": {
                  "type": "integer",
                  "description": "Shipment id as generated in the shipment section"
                },
                "freight_percentage": {
                  "type": "string",
                  "description": ""
                },
                "flat_charges": {
                  "type": "string",
                  "description": ""
                },
                "awb_code_status": {
                  "type": "integer",
                  "description": ""
                },
                "assigned_date_time": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "description": ""
                    },
                    "timezone_type": {
                      "type": "integer",
                      "description": ""
                    },
                    "timezone": {
                      "type": "string",
                      "description": ""
                    }
                  },
                  "description": ""
                },
                "applied_weight": {
                  "type": "string",
                  "description": ""
                },
                "company_id": {
                  "type": "integer",
                  "description": ""
                },
                "company_address_id": {
                  "type": "integer",
                  "description": ""
                },
                "id": {
                  "type": "integer",
                  "description": ""
                },
                "applied_weight_amount": {
                  "type": "integer",
                  "description": ""
                }
              }
            }
          }
        }
      },
      "required": [
        "awb_assign_status",
        "response"
      ]
    },
    "AwbError500": {
      "title": "Awb creation error 500",
      "type": "object",
      "properties": {
        "awb_assign_status": {
          "type": "string",
          "description": "Status if the code has been generated or not. In this case it would be a 0"
        },
        "data": {
          "type": "string",
          "description": "Passes a statement saying it is not possible"
        }
      },
      "required": [
        "awb_assign_status"
      ]
    },
    "PickupCreationRequest": {
      "title": "Pickup creation request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "shipment_id"
      ]
    },
    "PickupCreationResponse": {
      "title": "Pickup creation response",
      "type": "object",
      "properties": {
        "pickup_status": {
          "type": "integer",
          "format": "int32",
          "description": "Status if the package has been picked up or not"
        },
        "message": {
          "type": "string",
          "description": ""
        },
        "response": {
          "type": "object",
          "properties": {
            "data": {
              "type": "string"
            }
          },
          "description": ""
        },
        "manifest_url": {
          "type": "string",
          "description": "Url of the pdf file which shows the pickup manifest which has been created"
        }
      }
    },
    "GenerateLabelRequest": {
      "title": "Generate Label request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "shipment_id"
      ]
    },
    "GenerateLabelResponse": {
      "title": "Generate Label response",
      "type": "object",
      "properties": {
        "label_created": {
          "type": "integer",
          "format": "int32"
        },
        "label_url": {
          "type": "string"
        },
        "response": {
          "type": "string"
        }
      }
    },
    "AwbTrackingRequest": {
      "title": "AWB Tracking request",
      "type": "object",
      "properties": {
        "awb_code": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "awb_code"
      ]
    },
    "AwbTrackingResponse": {
      "title": "AWB Tracking response",
      "type": "object",
      "properties": {
        "tracking_data": {
          "type": "object"
        }
      },
      "required": [
        "tracking_data"
      ]
    },
    "ShipmentTrackingRequest": {
      "title": "Shipment Tracking request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "shipment_id"
      ]
    },
    "ShipmentTrackingResponse": {
      "title": "Shipment Tracking response",
      "type": "object",
      "properties": {
        "tracking_data": {
          "type": "object"
        }
      },
      "required": [
        "tracking_data"
      ]
    },
    "DiscrepancyResponse": {
      "title": "Discrepancy response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "data": {
          "type": "array",
          "items": {},
          "example": []
        },
        "upper_fold_text": {
          "type": "string",
          "example": ""
        },
        "lower_fild_text": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "status",
        "data",
        "upper_fold_text",
        "lower_fild_text"
      ]
    },
    "fileImportResponse": {
      "title": "Import Response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "StatementResponse": {
      "title": "Satement response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "transaction_id": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "order_id": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "channel_order_id": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "awb_code": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "return_awb_code": {
                "type": "string",
                "description": "",
                "example": "null"
              },
              "applied_weight": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "charged_weight": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "billed_weight": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "action": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "charge": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "description": {
                "type": "string",
                "description": "",
                "example": "Wallet balance"
              },
              "debit_amount": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "credit_amount": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "balance_amount": {
                "type": "string",
                "description": "",
                "example": "-41819.57"
              },
              "balance_weight": {
                "type": "integer",
                "description": "",
                "example": 0
              },
              "volumetric_weight": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "entered_weight": {
                "type": "string",
                "description": "",
                "example": ""
              },
              "created_at": {
                "type": "string",
                "description": "",
                "example": ""
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                },
                "per_page": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "total": 7,
                "count": 7,
                "per_page": 15,
                "current_page": 1,
                "total_pages": 1,
                "links": []
              }
            }
          }
        }
      }
    },
    "bulkExportResponse": {
      "title": "export all products",
      "type": "object",
      "properties": {
        "download_url": {
          "type": "string",
          "example": "https://s3-ap-southeast-1.amazonaws.com/kr-shipmultichannel/imports/c_21642/export-2017-08-28.csv"
        }
      }
    },
    "export401": {
      "title": "unauthorized access",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Failed to authenticate because of bad credentials or an invalid authorization header."
        },
        "status_code": {
          "type": "integer",
          "example": 401
        }
      }
    },
    "listing400": {
      "title": "no file provided",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "FIle required"
        },
        "status_code": {
          "type": "integer",
          "example": 400
        }
      }
    },
    "GetPickupResponse": {
      "title": "All pickup locations",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "shipping_address": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 123
                  },
                  "pickup_location": {
                    "type": "string",
                    "example": "NEWDELHI"
                  },
                  "address": {
                    "type": "string",
                    "example": "123, abc street"
                  },
                  "address_2": {
                    "type": "string",
                    "example": "near post office"
                  },
                  "city": {
                    "type": "string",
                    "example": "delhi"
                  },
                  "state": {
                    "type": "string",
                    "example": "delhi"
                  },
                  "country": {
                    "type": "string",
                    "example": "India"
                  },
                  "pin_code": {
                    "type": "integer",
                    "example": 110030
                  },
                  "email": {
                    "type": "string",
                    "example": "abc@xyz.com"
                  },
                  "phone": {
                    "type": "integer",
                    "example": 9876543210
                  },
                  "name": {
                    "type": "string",
                    "example": "ABC Pvt Ltd"
                  },
                  "company_id": {
                    "type": "integer",
                    "example": 321
                  },
                  "status": {
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            },
            "allow_more": {
              "type": "string",
              "example": "true"
            }
          }
        }
      }
    }
  }
}